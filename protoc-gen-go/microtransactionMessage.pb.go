// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microtransactionMessage.proto

package protoc_gen_go

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MicroTX struct {
	FromPubkey           string      `protobuf:"bytes,1,opt,name=from_pubkey,json=fromPubkey,proto3" json:"from_pubkey,omitempty"`
	FromPrivate          string      `protobuf:"bytes,2,opt,name=from_private,json=fromPrivate,proto3" json:"from_private,omitempty"`
	FromWif              string      `protobuf:"bytes,3,opt,name=from_wif,json=fromWif,proto3" json:"from_wif,omitempty"`
	ToAddress            string      `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ValueSatoshis        int64       `protobuf:"varint,5,opt,name=value_satoshis,json=valueSatoshis,proto3" json:"value_satoshis,omitempty"`
	Token                string      `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	ChangeAddress        string      `protobuf:"bytes,7,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	WaitGuarantee        bool        `protobuf:"varint,8,opt,name=wait_guarantee,json=waitGuarantee,proto3" json:"wait_guarantee,omitempty"`
	Tosign               []string    `protobuf:"bytes,9,rep,name=tosign,proto3" json:"tosign,omitempty"`
	Signatures           []string    `protobuf:"bytes,10,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Inputs               []*TXInput  `protobuf:"bytes,11,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*TXOutput `protobuf:"bytes,12,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Fees                 int32       `protobuf:"varint,13,opt,name=fees,proto3" json:"fees,omitempty"`
	Hash                 string      `protobuf:"bytes,14,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MicroTX) Reset()         { *m = MicroTX{} }
func (m *MicroTX) String() string { return proto.CompactTextString(m) }
func (*MicroTX) ProtoMessage()    {}
func (*MicroTX) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff233f905bf40fc, []int{0}
}

func (m *MicroTX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicroTX.Unmarshal(m, b)
}
func (m *MicroTX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicroTX.Marshal(b, m, deterministic)
}
func (m *MicroTX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicroTX.Merge(m, src)
}
func (m *MicroTX) XXX_Size() int {
	return xxx_messageInfo_MicroTX.Size(m)
}
func (m *MicroTX) XXX_DiscardUnknown() {
	xxx_messageInfo_MicroTX.DiscardUnknown(m)
}

var xxx_messageInfo_MicroTX proto.InternalMessageInfo

func (m *MicroTX) GetFromPubkey() string {
	if m != nil {
		return m.FromPubkey
	}
	return ""
}

func (m *MicroTX) GetFromPrivate() string {
	if m != nil {
		return m.FromPrivate
	}
	return ""
}

func (m *MicroTX) GetFromWif() string {
	if m != nil {
		return m.FromWif
	}
	return ""
}

func (m *MicroTX) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *MicroTX) GetValueSatoshis() int64 {
	if m != nil {
		return m.ValueSatoshis
	}
	return 0
}

func (m *MicroTX) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MicroTX) GetChangeAddress() string {
	if m != nil {
		return m.ChangeAddress
	}
	return ""
}

func (m *MicroTX) GetWaitGuarantee() bool {
	if m != nil {
		return m.WaitGuarantee
	}
	return false
}

func (m *MicroTX) GetTosign() []string {
	if m != nil {
		return m.Tosign
	}
	return nil
}

func (m *MicroTX) GetSignatures() []string {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *MicroTX) GetInputs() []*TXInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *MicroTX) GetOutputs() []*TXOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *MicroTX) GetFees() int32 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *MicroTX) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type TXInput struct {
	PrevHash             string   `protobuf:"bytes,1,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	OutputIndex          int32    `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	OutputValue          int32    `protobuf:"varint,3,opt,name=output_value,json=outputValue,proto3" json:"output_value,omitempty"`
	ScriptType           string   `protobuf:"bytes,4,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	Script               string   `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	Addresses            []string `protobuf:"bytes,6,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Sequence             int32    `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Age                  int32    `protobuf:"varint,8,opt,name=age,proto3" json:"age,omitempty"`
	WalletName           string   `protobuf:"bytes,9,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	WalletToken          string   `protobuf:"bytes,10,opt,name=wallet_token,json=walletToken,proto3" json:"wallet_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TXInput) Reset()         { *m = TXInput{} }
func (m *TXInput) String() string { return proto.CompactTextString(m) }
func (*TXInput) ProtoMessage()    {}
func (*TXInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff233f905bf40fc, []int{1}
}

func (m *TXInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TXInput.Unmarshal(m, b)
}
func (m *TXInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TXInput.Marshal(b, m, deterministic)
}
func (m *TXInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TXInput.Merge(m, src)
}
func (m *TXInput) XXX_Size() int {
	return xxx_messageInfo_TXInput.Size(m)
}
func (m *TXInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TXInput.DiscardUnknown(m)
}

var xxx_messageInfo_TXInput proto.InternalMessageInfo

func (m *TXInput) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *TXInput) GetOutputIndex() int32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

func (m *TXInput) GetOutputValue() int32 {
	if m != nil {
		return m.OutputValue
	}
	return 0
}

func (m *TXInput) GetScriptType() string {
	if m != nil {
		return m.ScriptType
	}
	return ""
}

func (m *TXInput) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *TXInput) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *TXInput) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *TXInput) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *TXInput) GetWalletName() string {
	if m != nil {
		return m.WalletName
	}
	return ""
}

func (m *TXInput) GetWalletToken() string {
	if m != nil {
		return m.WalletToken
	}
	return ""
}

type TXOutput struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Script               string   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Addresses            []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	ScriptType           string   `protobuf:"bytes,4,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	SpentBy              string   `protobuf:"bytes,5,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	DataHex              string   `protobuf:"bytes,6,opt,name=data_hex,json=dataHex,proto3" json:"data_hex,omitempty"`
	DataString           string   `protobuf:"bytes,7,opt,name=data_string,json=dataString,proto3" json:"data_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TXOutput) Reset()         { *m = TXOutput{} }
func (m *TXOutput) String() string { return proto.CompactTextString(m) }
func (*TXOutput) ProtoMessage()    {}
func (*TXOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff233f905bf40fc, []int{2}
}

func (m *TXOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TXOutput.Unmarshal(m, b)
}
func (m *TXOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TXOutput.Marshal(b, m, deterministic)
}
func (m *TXOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TXOutput.Merge(m, src)
}
func (m *TXOutput) XXX_Size() int {
	return xxx_messageInfo_TXOutput.Size(m)
}
func (m *TXOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TXOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TXOutput proto.InternalMessageInfo

func (m *TXOutput) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TXOutput) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *TXOutput) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *TXOutput) GetScriptType() string {
	if m != nil {
		return m.ScriptType
	}
	return ""
}

func (m *TXOutput) GetSpentBy() string {
	if m != nil {
		return m.SpentBy
	}
	return ""
}

func (m *TXOutput) GetDataHex() string {
	if m != nil {
		return m.DataHex
	}
	return ""
}

func (m *TXOutput) GetDataString() string {
	if m != nil {
		return m.DataString
	}
	return ""
}

func init() {
	proto.RegisterType((*MicroTX)(nil), "fairwaycorp.blockchainprotobuf.MicroTX")
	proto.RegisterType((*TXInput)(nil), "fairwaycorp.blockchainprotobuf.TXInput")
	proto.RegisterType((*TXOutput)(nil), "fairwaycorp.blockchainprotobuf.TXOutput")
}

func init() { proto.RegisterFile("microtransactionMessage.proto", fileDescriptor_cff233f905bf40fc) }

var fileDescriptor_cff233f905bf40fc = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x41, 0x6f, 0xd3, 0x4a,
	0x10, 0xc7, 0x95, 0xba, 0x89, 0xed, 0x49, 0x53, 0x3d, 0xad, 0x9e, 0x9e, 0xb6, 0x0f, 0x5a, 0x42,
	0x25, 0x84, 0x2f, 0x49, 0x25, 0x38, 0x21, 0x0e, 0x88, 0x5e, 0x68, 0x0f, 0x85, 0xca, 0x8d, 0xa0,
	0xe2, 0x62, 0x6d, 0x9c, 0x89, 0xbd, 0x6a, 0xb2, 0x6b, 0xbc, 0xeb, 0xa6, 0xf9, 0x60, 0x7c, 0x0d,
	0xbe, 0x0e, 0x57, 0xb4, 0xb3, 0x4e, 0x1b, 0x21, 0x41, 0x4f, 0xd9, 0xff, 0x6f, 0x66, 0x67, 0x33,
	0xf3, 0x1f, 0xc3, 0xe1, 0x52, 0xe6, 0xb5, 0xb6, 0xb5, 0x50, 0x46, 0xe4, 0x56, 0x6a, 0x75, 0x81,
	0xc6, 0x88, 0x02, 0xc7, 0x55, 0xad, 0xad, 0x66, 0x47, 0x73, 0x21, 0xeb, 0x95, 0x58, 0xe7, 0xba,
	0xae, 0xc6, 0xd3, 0x85, 0xce, 0x6f, 0xf2, 0x52, 0x48, 0x45, 0xc1, 0x69, 0x33, 0x3f, 0xfe, 0x19,
	0x40, 0x78, 0xe1, 0x2a, 0x4c, 0xae, 0xd9, 0x33, 0xe8, 0xcf, 0x6b, 0xbd, 0xcc, 0xaa, 0x66, 0x7a,
	0x83, 0x6b, 0xde, 0x19, 0x76, 0x92, 0x38, 0x05, 0x87, 0x2e, 0x89, 0xb0, 0xe7, 0xb0, 0xe7, 0x13,
	0x6a, 0x79, 0x2b, 0x2c, 0xf2, 0x1d, 0xca, 0xa0, 0x4b, 0x97, 0x1e, 0xb1, 0x03, 0x88, 0x28, 0x65,
	0x25, 0xe7, 0x3c, 0xa0, 0x70, 0xe8, 0xf4, 0x17, 0x39, 0x67, 0x87, 0x00, 0x56, 0x67, 0x62, 0x36,
	0xab, 0xd1, 0x18, 0xbe, 0x4b, 0xc1, 0xd8, 0xea, 0xf7, 0x1e, 0xb0, 0x17, 0xb0, 0x7f, 0x2b, 0x16,
	0x0d, 0x66, 0x46, 0x58, 0x6d, 0x4a, 0x69, 0x78, 0x77, 0xd8, 0x49, 0x82, 0x74, 0x40, 0xf4, 0xaa,
	0x85, 0xec, 0x5f, 0xe8, 0x5a, 0x7d, 0x83, 0x8a, 0xf7, 0xa8, 0x80, 0x17, 0xee, 0x72, 0x5e, 0x0a,
	0x55, 0xe0, 0x7d, 0xfd, 0x90, 0xc2, 0x03, 0x4f, 0xb7, 0xde, 0x58, 0x09, 0x69, 0xb3, 0xa2, 0x11,
	0xb5, 0x50, 0x16, 0x91, 0x47, 0xc3, 0x4e, 0x12, 0xa5, 0x03, 0x47, 0x3f, 0x6c, 0x20, 0xfb, 0x0f,
	0x7a, 0x56, 0x1b, 0x59, 0x28, 0x1e, 0x0f, 0x83, 0x24, 0x4e, 0x5b, 0xc5, 0x8e, 0x00, 0xdc, 0xaf,
	0xb0, 0x4d, 0x8d, 0x86, 0x03, 0xc5, 0xb6, 0x08, 0x7b, 0x07, 0x3d, 0xa9, 0xaa, 0xc6, 0x1a, 0xde,
	0x1f, 0x06, 0x49, 0xff, 0xd5, 0xcb, 0xf1, 0xdf, 0xa7, 0x3f, 0x9e, 0x5c, 0x9f, 0xbb, 0xfc, 0xb4,
	0xbd, 0xc6, 0x4e, 0x21, 0xd4, 0x8d, 0xa5, 0x0a, 0x7b, 0x54, 0x21, 0x79, 0xbc, 0xc2, 0x27, 0xba,
	0x90, 0x6e, 0x2e, 0x32, 0x06, 0xbb, 0x73, 0x44, 0xc3, 0x07, 0xc3, 0x4e, 0xd2, 0x4d, 0xe9, 0xec,
	0x58, 0x29, 0x4c, 0xc9, 0xf7, 0x69, 0x28, 0x74, 0x3e, 0xfe, 0xbe, 0x03, 0x61, 0xfb, 0x3e, 0x7b,
	0x02, 0x71, 0x55, 0xe3, 0x6d, 0x46, 0x49, 0xde, 0xf7, 0xc8, 0x81, 0x33, 0x61, 0x4a, 0xe7, 0xba,
	0xaf, 0x9d, 0x49, 0x35, 0xc3, 0x3b, 0x72, 0xbd, 0x9b, 0xf6, 0x3d, 0x3b, 0x77, 0x68, 0x2b, 0x85,
	0xcc, 0x22, 0xe7, 0xef, 0x53, 0x3e, 0x3b, 0xe4, 0x96, 0xcb, 0xe4, 0xb5, 0xac, 0x6c, 0x66, 0xd7,
	0x15, 0xb6, 0xf6, 0x83, 0x47, 0x93, 0x75, 0x45, 0x43, 0xf7, 0x8a, 0x7c, 0x8f, 0xd3, 0x56, 0xb1,
	0xa7, 0x10, 0xb7, 0x9e, 0xa2, 0xe1, 0x3d, 0x9a, 0xf9, 0x03, 0x60, 0xff, 0x43, 0x64, 0xf0, 0x5b,
	0x83, 0x2a, 0x47, 0xb2, 0xbc, 0x9b, 0xde, 0x6b, 0xf6, 0x0f, 0x04, 0xa2, 0xf0, 0x16, 0x77, 0x53,
	0x77, 0x74, 0x7f, 0x62, 0x25, 0x16, 0x0b, 0xb4, 0x99, 0x12, 0x4b, 0xe4, 0xb1, 0xff, 0x13, 0x1e,
	0x7d, 0x14, 0x4b, 0x74, 0x8d, 0xb4, 0x09, 0x7e, 0xc9, 0xc0, 0x6f, 0xb8, 0x67, 0x13, 0x87, 0x8e,
	0x7f, 0x74, 0x20, 0xda, 0x4c, 0xdd, 0x6d, 0xa3, 0xef, 0xb8, 0x43, 0x8f, 0x78, 0xb1, 0xd5, 0xca,
	0xce, 0x9f, 0x5b, 0x09, 0x7e, 0x6f, 0xe5, 0xd1, 0x09, 0x1d, 0x40, 0x64, 0x2a, 0x54, 0x36, 0x9b,
	0xae, 0xdb, 0x19, 0x85, 0xa4, 0x4f, 0xd7, 0x2e, 0x34, 0x13, 0x56, 0x64, 0x25, 0xde, 0xb5, 0x1f,
	0x46, 0xe8, 0xf4, 0x19, 0xde, 0xb9, 0xb2, 0x14, 0x32, 0xb6, 0x96, 0xaa, 0x68, 0xbf, 0x0b, 0x70,
	0xe8, 0x8a, 0xc8, 0xe9, 0xdb, 0xaf, 0x6f, 0x0a, 0x69, 0xcb, 0x66, 0x3a, 0xce, 0xf5, 0xf2, 0xa4,
	0xdd, 0xb7, 0x91, 0x5b, 0xb8, 0x93, 0x87, 0x85, 0x1b, 0x6d, 0x36, 0xee, 0x84, 0x0e, 0xf9, 0xa8,
	0x40, 0x35, 0x2a, 0xf4, 0xb4, 0x47, 0xf2, 0xf5, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xbc,
	0x5a, 0x3b, 0x87, 0x04, 0x00, 0x00,
}
