// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contractMessage_Eth.proto

package eth // import "github.com/fairway-corp/blockchain-protobuf/protoc-gen-go/eth"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateContractEndpointRequest struct {
	Network NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias" json:"network,omitempty"`
	// Solidity code of this contract; required when creating a contract. In responses, only returned with contracts initially compiled by BlockCypher.
	Solidity string `protobuf:"bytes,2,opt,name=solidity,proto3" json:"solidity,omitempty"`
	// Parameters for either contract creation or method execution.
	Params []string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	// Named contract(s) to publish; necessary to specify when first creating a contract.
	Publish []string `protobuf:"bytes,4,rep,name=publish,proto3" json:"publish,omitempty"`
	// Private key associated with a funded Ethereum external account used to publish a contract or execute a method.
	Private string `protobuf:"bytes,5,opt,name=private,proto3" json:"private,omitempty"`
	// Maximum amount of gas to use in contract creation or method execution.
	GasLimit int32 `protobuf:"varint,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// Amount (in wei) to transfer; can be used when creating a contract or calling a method.
	Value int32 `protobuf:"varint,7,opt,name=value,proto3" json:"value,omitempty"`
	// Name of contract as published.
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// Hex-encoded binary compilation of this contract.
	Bin string `protobuf:"bytes,9,opt,name=bin,proto3" json:"bin,omitempty"`
	// JSON-encoded ABI. Only returned with contracts initially compiled by BlockCypher.
	Abi string `protobuf:"bytes,10,opt,name=abi,proto3" json:"abi,omitempty"`
	// Hex-encoded address of this contract.
	Address string `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	// Timestamp when this contract was confirmed in the Ethereum blockchain.
	Created string `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	// Hex-encoded transaction hash that created this contract.
	CreationTxHash string `protobuf:"bytes,13,opt,name=creation_tx_hash,json=creationTxHash,proto3" json:"creation_tx_hash,omitempty"`
	// If this is a response from a calling a contract method, this array of results may appear if the method returns any.
	Results              []string `protobuf:"bytes,14,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateContractEndpointRequest) Reset()         { *m = CreateContractEndpointRequest{} }
func (m *CreateContractEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContractEndpointRequest) ProtoMessage()    {}
func (*CreateContractEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_contractMessage_Eth_7a12a43d19f0ee8e, []int{0}
}
func (m *CreateContractEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContractEndpointRequest.Unmarshal(m, b)
}
func (m *CreateContractEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContractEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *CreateContractEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContractEndpointRequest.Merge(dst, src)
}
func (m *CreateContractEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_CreateContractEndpointRequest.Size(m)
}
func (m *CreateContractEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContractEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContractEndpointRequest proto.InternalMessageInfo

func (m *CreateContractEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAIN
}

func (m *CreateContractEndpointRequest) GetSolidity() string {
	if m != nil {
		return m.Solidity
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CreateContractEndpointRequest) GetPublish() []string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *CreateContractEndpointRequest) GetPrivate() string {
	if m != nil {
		return m.Private
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetGasLimit() int32 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *CreateContractEndpointRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CreateContractEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetBin() string {
	if m != nil {
		return m.Bin
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetCreationTxHash() string {
	if m != nil {
		return m.CreationTxHash
	}
	return ""
}

func (m *CreateContractEndpointRequest) GetResults() []string {
	if m != nil {
		return m.Results
	}
	return nil
}

type ContractAddressEndpointRequest struct {
	Network              NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias" json:"network,omitempty"`
	QueryAddress         string               `protobuf:"bytes,2,opt,name=query_address,json=queryAddress,proto3" json:"query_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ContractAddressEndpointRequest) Reset()         { *m = ContractAddressEndpointRequest{} }
func (m *ContractAddressEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ContractAddressEndpointRequest) ProtoMessage()    {}
func (*ContractAddressEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_contractMessage_Eth_7a12a43d19f0ee8e, []int{1}
}
func (m *ContractAddressEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractAddressEndpointRequest.Unmarshal(m, b)
}
func (m *ContractAddressEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractAddressEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *ContractAddressEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractAddressEndpointRequest.Merge(dst, src)
}
func (m *ContractAddressEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ContractAddressEndpointRequest.Size(m)
}
func (m *ContractAddressEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractAddressEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContractAddressEndpointRequest proto.InternalMessageInfo

func (m *ContractAddressEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAIN
}

func (m *ContractAddressEndpointRequest) GetQueryAddress() string {
	if m != nil {
		return m.QueryAddress
	}
	return ""
}

type CallContractMethodEndpointRequest struct {
	Network      NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias" json:"network,omitempty"`
	QueryAddress string               `protobuf:"bytes,2,opt,name=query_address,json=queryAddress,proto3" json:"query_address,omitempty"`
	Method       string               `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// Solidity code of this contract; required when creating a contract. In responses, only returned with contracts initially compiled by BlockCypher.
	Solidity string `protobuf:"bytes,4,opt,name=solidity,proto3" json:"solidity,omitempty"`
	// Parameters for either contract creation or method execution.
	Params []string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	// Named contract(s) to publish; necessary to specify when first creating a contract.
	Publish []string `protobuf:"bytes,6,rep,name=publish,proto3" json:"publish,omitempty"`
	// Private key associated with a funded Ethereum external account used to publish a contract or execute a method.
	Private string `protobuf:"bytes,7,opt,name=private,proto3" json:"private,omitempty"`
	// Maximum amount of gas to use in contract creation or method execution.
	GasLimit int32 `protobuf:"varint,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// Amount (in wei) to transfer; can be used when creating a contract or calling a method.
	Value int32 `protobuf:"varint,9,opt,name=value,proto3" json:"value,omitempty"`
	// Name of contract as published.
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// Hex-encoded binary compilation of this contract.
	Bin string `protobuf:"bytes,11,opt,name=bin,proto3" json:"bin,omitempty"`
	// JSON-encoded ABI. Only returned with contracts initially compiled by BlockCypher.
	Abi string `protobuf:"bytes,12,opt,name=abi,proto3" json:"abi,omitempty"`
	// Hex-encoded address of this contract.
	Address string `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	// Timestamp when this contract was confirmed in the Ethereum blockchain.
	Created string `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	// Hex-encoded transaction hash that created this contract.
	CreationTxHash string `protobuf:"bytes,15,opt,name=creation_tx_hash,json=creationTxHash,proto3" json:"creation_tx_hash,omitempty"`
	// If this is a response from a calling a contract method, this array of results may appear if the method returns any.
	Results              []string `protobuf:"bytes,16,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallContractMethodEndpointRequest) Reset()         { *m = CallContractMethodEndpointRequest{} }
func (m *CallContractMethodEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*CallContractMethodEndpointRequest) ProtoMessage()    {}
func (*CallContractMethodEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_contractMessage_Eth_7a12a43d19f0ee8e, []int{2}
}
func (m *CallContractMethodEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallContractMethodEndpointRequest.Unmarshal(m, b)
}
func (m *CallContractMethodEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallContractMethodEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *CallContractMethodEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallContractMethodEndpointRequest.Merge(dst, src)
}
func (m *CallContractMethodEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_CallContractMethodEndpointRequest.Size(m)
}
func (m *CallContractMethodEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CallContractMethodEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CallContractMethodEndpointRequest proto.InternalMessageInfo

func (m *CallContractMethodEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAIN
}

func (m *CallContractMethodEndpointRequest) GetQueryAddress() string {
	if m != nil {
		return m.QueryAddress
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetSolidity() string {
	if m != nil {
		return m.Solidity
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CallContractMethodEndpointRequest) GetPublish() []string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *CallContractMethodEndpointRequest) GetPrivate() string {
	if m != nil {
		return m.Private
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetGasLimit() int32 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *CallContractMethodEndpointRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CallContractMethodEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetBin() string {
	if m != nil {
		return m.Bin
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetCreationTxHash() string {
	if m != nil {
		return m.CreationTxHash
	}
	return ""
}

func (m *CallContractMethodEndpointRequest) GetResults() []string {
	if m != nil {
		return m.Results
	}
	return nil
}

type ContractArray struct {
	Contract             []*Contract `protobuf:"bytes,1,rep,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ContractArray) Reset()         { *m = ContractArray{} }
func (m *ContractArray) String() string { return proto.CompactTextString(m) }
func (*ContractArray) ProtoMessage()    {}
func (*ContractArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_contractMessage_Eth_7a12a43d19f0ee8e, []int{3}
}
func (m *ContractArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractArray.Unmarshal(m, b)
}
func (m *ContractArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractArray.Marshal(b, m, deterministic)
}
func (dst *ContractArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractArray.Merge(dst, src)
}
func (m *ContractArray) XXX_Size() int {
	return xxx_messageInfo_ContractArray.Size(m)
}
func (m *ContractArray) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractArray.DiscardUnknown(m)
}

var xxx_messageInfo_ContractArray proto.InternalMessageInfo

func (m *ContractArray) GetContract() []*Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateContractEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest")
	proto.RegisterType((*ContractAddressEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.eth.ContractAddressEndpointRequest")
	proto.RegisterType((*CallContractMethodEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest")
	proto.RegisterType((*ContractArray)(nil), "fairwaycorp.blockchainprotobuf.eth.ContractArray")
}

func init() {
	proto.RegisterFile("contractMessage_Eth.proto", fileDescriptor_contractMessage_Eth_7a12a43d19f0ee8e)
}

var fileDescriptor_contractMessage_Eth_7a12a43d19f0ee8e = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0xcd, 0x8e, 0xd3, 0x30,
	0x14, 0x85, 0x15, 0x32, 0xfd, 0x73, 0x7f, 0xa8, 0x2c, 0x04, 0x66, 0x10, 0xa8, 0x94, 0x4d, 0x16,
	0x34, 0x95, 0x86, 0x0d, 0x1b, 0x84, 0x4a, 0x35, 0xd2, 0x2c, 0x80, 0x45, 0xc4, 0x06, 0x36, 0xd5,
	0x4d, 0xe2, 0x49, 0xac, 0x71, 0xec, 0x8c, 0xed, 0x4c, 0xa7, 0x8f, 0xc2, 0xcb, 0xf0, 0x6a, 0xa0,
	0x38, 0x49, 0xd1, 0xa8, 0x13, 0xca, 0x0a, 0xb1, 0xbb, 0xe7, 0x9e, 0xfa, 0xf8, 0xba, 0xf7, 0x53,
	0xd0, 0xd3, 0x48, 0x0a, 0xa3, 0x20, 0x32, 0x9f, 0xa8, 0xd6, 0x90, 0xd0, 0xcd, 0xb9, 0x49, 0xfd,
	0x5c, 0x49, 0x23, 0xf1, 0xfc, 0x12, 0x98, 0xda, 0xc2, 0x2e, 0x92, 0x2a, 0xf7, 0x43, 0x2e, 0xa3,
	0xab, 0x28, 0x05, 0x26, 0xac, 0x19, 0x16, 0x97, 0x3e, 0x35, 0xe9, 0xe9, 0x93, 0x48, 0x66, 0x99,
	0x14, 0x07, 0x87, 0xe7, 0x3f, 0x5c, 0xf4, 0x7c, 0xad, 0x28, 0x18, 0xba, 0xae, 0x2f, 0x38, 0x17,
	0x71, 0x2e, 0x99, 0x30, 0x01, 0xbd, 0x2e, 0xa8, 0x36, 0x38, 0x40, 0x3d, 0x41, 0xcd, 0x56, 0xaa,
	0x2b, 0xe2, 0xcc, 0x1c, 0x6f, 0x72, 0xf6, 0xd6, 0x3f, 0x7e, 0xa1, 0xff, 0xb9, 0x3a, 0xb2, 0xe2,
	0x5c, 0x6e, 0x99, 0x48, 0x56, 0x9c, 0x81, 0x0e, 0x9a, 0x20, 0x7c, 0x8a, 0xfa, 0x5a, 0x72, 0x16,
	0x33, 0xb3, 0x23, 0x0f, 0x66, 0x8e, 0x37, 0x08, 0xf6, 0x1a, 0x3f, 0x46, 0xdd, 0x1c, 0x14, 0x64,
	0x9a, 0xb8, 0x33, 0xd7, 0x1b, 0x04, 0xb5, 0xc2, 0x04, 0xf5, 0xf2, 0x22, 0xe4, 0x4c, 0xa7, 0xe4,
	0xc4, 0x1a, 0x8d, 0xb4, 0x8e, 0x62, 0x37, 0x60, 0x28, 0xe9, 0xd8, 0xb0, 0x46, 0xe2, 0x67, 0x68,
	0x90, 0x80, 0xde, 0x70, 0x96, 0x31, 0x43, 0xba, 0x33, 0xc7, 0xeb, 0x04, 0xfd, 0x04, 0xf4, 0xc7,
	0x52, 0xe3, 0x47, 0xa8, 0x73, 0x03, 0xbc, 0xa0, 0xa4, 0x67, 0x8d, 0x4a, 0x60, 0x8c, 0x4e, 0x04,
	0x64, 0x94, 0xf4, 0x6d, 0x92, 0xad, 0xf1, 0x14, 0xb9, 0x21, 0x13, 0x64, 0x60, 0x5b, 0x65, 0x59,
	0x76, 0x20, 0x64, 0x04, 0x55, 0x1d, 0x08, 0x59, 0x39, 0x04, 0xc4, 0xb1, 0xa2, 0x5a, 0x93, 0x61,
	0x35, 0x44, 0x2d, 0x4b, 0x27, 0xb2, 0xff, 0x70, 0x4c, 0x46, 0x95, 0x53, 0x4b, 0xec, 0xa1, 0xa9,
	0x2d, 0x99, 0x14, 0x1b, 0x73, 0xbb, 0x49, 0x41, 0xa7, 0x64, 0x6c, 0x7f, 0x32, 0x69, 0xfa, 0x5f,
	0x6e, 0x2f, 0xa0, 0x7a, 0xa2, 0xa2, 0xba, 0xe0, 0x46, 0x93, 0x49, 0xf5, 0xf8, 0x5a, 0xce, 0xbf,
	0x3b, 0xe8, 0x45, 0xb3, 0xba, 0x55, 0x75, 0xe3, 0xbf, 0xd8, 0xe0, 0x2b, 0x34, 0xbe, 0x2e, 0xa8,
	0xda, 0x6d, 0x9a, 0x47, 0x57, 0x6b, 0x1c, 0xd9, 0x66, 0x3d, 0xc7, 0xfc, 0xa7, 0x8b, 0x5e, 0xae,
	0x81, 0xf3, 0xf5, 0x9e, 0x5d, 0x93, 0xca, 0xf8, 0x7f, 0x19, 0xaf, 0x24, 0x2d, 0xb3, 0x13, 0x11,
	0xd7, 0xba, 0xb5, 0xba, 0x43, 0xe7, 0x49, 0x2b, 0x9d, 0x9d, 0x36, 0x3a, 0xbb, 0xad, 0x74, 0xf6,
	0xfe, 0x40, 0x67, 0xbf, 0x8d, 0xce, 0xc1, 0x7d, 0x74, 0xa2, 0x43, 0x3a, 0x87, 0x07, 0x74, 0x8e,
	0xee, 0xa5, 0x73, 0xdc, 0x4a, 0xe7, 0xe4, 0x38, 0x9d, 0x0f, 0x8f, 0xd1, 0x39, 0xbd, 0x4b, 0xe7,
	0x57, 0x34, 0xde, 0xc3, 0xa9, 0x14, 0xec, 0xf0, 0x05, 0xea, 0x37, 0x5f, 0x32, 0xe2, 0xcc, 0x5c,
	0x6f, 0x78, 0xf6, 0xfa, 0x6f, 0xb6, 0xdd, 0x84, 0x04, 0xfb, 0xd3, 0x1f, 0xde, 0x7f, 0x7b, 0x97,
	0x30, 0x93, 0x16, 0xa1, 0x1f, 0xc9, 0x6c, 0x59, 0x67, 0x2c, 0xca, 0x90, 0xe5, 0xef, 0x90, 0x45,
	0x93, 0xb2, 0xb4, 0x45, 0xb4, 0x48, 0xa8, 0x58, 0x24, 0x72, 0x49, 0x4d, 0x1a, 0x76, 0x6d, 0xeb,
	0xcd, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xc8, 0x0e, 0x50, 0x5b, 0x05, 0x00, 0x00,
}
