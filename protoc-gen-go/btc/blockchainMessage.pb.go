// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchainMessage.proto

package btc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Blockchain struct {
	// The name of the blockchain represented, in the form of $COIN.$CHAIN.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The current height of the blockchain; i.e., the number of blocks in the blockchain.
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// The hash of the latest confirmed block in the blockchain; in Bitcoin, the hashing function is SHA256(SHA256(block)).
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	// The time of the latest update to the blockchain; typically when the latest block was added.
	Time string `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	// The Block URL to query for more information on the latest confirmed block; returns a Block.
	LatestUrl string `protobuf:"bytes,5,opt,name=latest_url,json=latestUrl,proto3" json:"latest_url,omitempty"`
	// The hash of the second-to-latest confirmed block in the blockchain.
	PreviousHash string `protobuf:"bytes,6,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	// The Block URL to query for more information on the second-to-latest confirmed block; returns a Block.
	PreviousUrl string `protobuf:"bytes,7,opt,name=previous_url,json=previousUrl,proto3" json:"previous_url,omitempty"`
	// N/A, will be deprecated soon.
	PeerCount int32 `protobuf:"varint,8,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
	// A rolling average of the fee (in satoshis) paid per kilobyte for transactions to be confirmed within 1 to 2 blocks.
	HighFeePerKb int32 `protobuf:"varint,9,opt,name=high_fee_per_kb,json=highFeePerKb,proto3" json:"high_fee_per_kb,omitempty"`
	// A rolling average of the fee (in satoshis) paid per kilobyte for transactions to be confirmed within 3 to 6 blocks.
	MediumFeePerKb int32 `protobuf:"varint,10,opt,name=medium_fee_per_kb,json=mediumFeePerKb,proto3" json:"medium_fee_per_kb,omitempty"`
	// A rolling average of the fee (in satoshis) paid per kilobyte for transactions to be confirmed in 7 or more blocks.
	LowFeePerKb int32 `protobuf:"varint,11,opt,name=low_fee_per_kb,json=lowFeePerKb,proto3" json:"low_fee_per_kb,omitempty"`
	// Number of unconfirmed transactions in memory pool (likely to be included in next block).
	UnconfirmedCount int32 `protobuf:"varint,12,opt,name=unconfirmed_count,json=unconfirmedCount,proto3" json:"unconfirmed_count,omitempty"`
	// Optional The current height of the latest fork to the blockchain; when no competing blockchain fork present, not returned with endpoints that return Blockchains.
	LastForkHeight int32 `protobuf:"varint,13,opt,name=last_fork_height,json=lastForkHeight,proto3" json:"last_fork_height,omitempty"`
	// Optional The hash of the latest confirmed block in the latest fork of the blockchain; when no competing blockchain fork present, not returned with endpoints that return Blockchains.
	LastForkHash         string   `protobuf:"bytes,14,opt,name=last_fork_hash,json=lastForkHash,proto3" json:"last_fork_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Blockchain) Reset()         { *m = Blockchain{} }
func (m *Blockchain) String() string { return proto.CompactTextString(m) }
func (*Blockchain) ProtoMessage()    {}
func (*Blockchain) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{0}
}

func (m *Blockchain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blockchain.Unmarshal(m, b)
}
func (m *Blockchain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blockchain.Marshal(b, m, deterministic)
}
func (m *Blockchain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blockchain.Merge(m, src)
}
func (m *Blockchain) XXX_Size() int {
	return xxx_messageInfo_Blockchain.Size(m)
}
func (m *Blockchain) XXX_DiscardUnknown() {
	xxx_messageInfo_Blockchain.DiscardUnknown(m)
}

var xxx_messageInfo_Blockchain proto.InternalMessageInfo

func (m *Blockchain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Blockchain) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Blockchain) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Blockchain) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Blockchain) GetLatestUrl() string {
	if m != nil {
		return m.LatestUrl
	}
	return ""
}

func (m *Blockchain) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *Blockchain) GetPreviousUrl() string {
	if m != nil {
		return m.PreviousUrl
	}
	return ""
}

func (m *Blockchain) GetPeerCount() int32 {
	if m != nil {
		return m.PeerCount
	}
	return 0
}

func (m *Blockchain) GetHighFeePerKb() int32 {
	if m != nil {
		return m.HighFeePerKb
	}
	return 0
}

func (m *Blockchain) GetMediumFeePerKb() int32 {
	if m != nil {
		return m.MediumFeePerKb
	}
	return 0
}

func (m *Blockchain) GetLowFeePerKb() int32 {
	if m != nil {
		return m.LowFeePerKb
	}
	return 0
}

func (m *Blockchain) GetUnconfirmedCount() int32 {
	if m != nil {
		return m.UnconfirmedCount
	}
	return 0
}

func (m *Blockchain) GetLastForkHeight() int32 {
	if m != nil {
		return m.LastForkHeight
	}
	return 0
}

func (m *Blockchain) GetLastForkHash() string {
	if m != nil {
		return m.LastForkHash
	}
	return ""
}

type Block struct {
	// The hash of the block; in Bitcoin, the hashing function is SHA256(SHA256(block))
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// The height of the block in the blockchain; i.e., there are height earlier blocks in its blockchain.
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// The depth of the block in the blockchain; i.e., there are depth later blocks in its blockchain.
	Depth int32 `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	// The name of the blockchain represented, in the form of $COIN.$CHAIN
	Network string `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	// The total number of satoshis transacted in this block.
	Total int32 `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	// The total number of fees—in satoshis—collected by miners in this block.
	Fees int32 `protobuf:"varint,6,opt,name=fees,proto3" json:"fees,omitempty"`
	// Optional Raw size of block (including header and all transactions) in bytes. Not returned for bitcoin blocks earlier than height 389104.
	Size int32 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// Block version.
	Ver int32 `protobuf:"varint,8,opt,name=ver,proto3" json:"ver,omitempty"`
	// Recorded time at which block was built. Note: Miners rarely post accurate clock times.
	Time string `protobuf:"bytes,9,opt,name=time,proto3" json:"time,omitempty"`
	// The time Block’s servers receive the block. Our servers’ clock is continuously adjusted and accurate.
	ReceivedTime string `protobuf:"bytes,10,opt,name=received_time,json=receivedTime,proto3" json:"received_time,omitempty"`
	// Address of the peer that sent Block’s servers this block.
	RelayedBy string `protobuf:"bytes,11,opt,name=relayed_by,json=relayedBy,proto3" json:"relayed_by,omitempty"`
	// The block-encoded difficulty target.
	Bits int32 `protobuf:"varint,12,opt,name=bits,proto3" json:"bits,omitempty"`
	// The number used by a miner to generate this block.
	Nonce int32 `protobuf:"varint,13,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Number of transactions in this block.
	NTx int32 `protobuf:"varint,14,opt,name=n_tx,json=nTx,proto3" json:"n_tx,omitempty"`
	// The hash of the previous block in the blockchain.
	PrevBlock string `protobuf:"bytes,15,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
	// The Block URL to query for more information on the previous block.
	PrevBlockUrl string `protobuf:"bytes,16,opt,name=prev_block_url,json=prevBlockUrl,proto3" json:"prev_block_url,omitempty"`
	// The base Block URL to receive transaction details. To get more details about specific transactions, you must concatenate this URL with the desired transaction hash(es).
	TxUrl string `protobuf:"bytes,17,opt,name=tx_url,json=txUrl,proto3" json:"tx_url,omitempty"`
	// The Merkle root of this block.
	MrklRoot string `protobuf:"bytes,18,opt,name=mrkl_root,json=mrklRoot,proto3" json:"mrkl_root,omitempty"`
	// An array of transaction hashes in this block. By default, only 20 are included.
	Txids []string `protobuf:"bytes,19,rep,name=txids,proto3" json:"txids,omitempty"`
	// Optional If there are more transactions that couldn’t fit in the txids array, this is the Block URL to query the next set of transactions (within a Block object).
	NextTxids            string   `protobuf:"bytes,20,opt,name=next_txids,json=nextTxids,proto3" json:"next_txids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Block) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Block) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Block) GetFees() int32 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *Block) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Block) GetVer() int32 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *Block) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Block) GetReceivedTime() string {
	if m != nil {
		return m.ReceivedTime
	}
	return ""
}

func (m *Block) GetRelayedBy() string {
	if m != nil {
		return m.RelayedBy
	}
	return ""
}

func (m *Block) GetBits() int32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *Block) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Block) GetNTx() int32 {
	if m != nil {
		return m.NTx
	}
	return 0
}

func (m *Block) GetPrevBlock() string {
	if m != nil {
		return m.PrevBlock
	}
	return ""
}

func (m *Block) GetPrevBlockUrl() string {
	if m != nil {
		return m.PrevBlockUrl
	}
	return ""
}

func (m *Block) GetTxUrl() string {
	if m != nil {
		return m.TxUrl
	}
	return ""
}

func (m *Block) GetMrklRoot() string {
	if m != nil {
		return m.MrklRoot
	}
	return ""
}

func (m *Block) GetTxids() []string {
	if m != nil {
		return m.Txids
	}
	return nil
}

func (m *Block) GetNextTxids() string {
	if m != nil {
		return m.NextTxids
	}
	return ""
}

type Feature struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	LastTransitionHeight int64    `protobuf:"varint,4,opt,name=last_transition_height,json=lastTransitionHeight,proto3" json:"last_transition_height,omitempty"`
	LastTransitionHash   string   `protobuf:"bytes,5,opt,name=last_transition_hash,json=lastTransitionHash,proto3" json:"last_transition_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{2}
}

func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Feature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Feature) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Feature) GetLastTransitionHeight() int64 {
	if m != nil {
		return m.LastTransitionHeight
	}
	return 0
}

func (m *Feature) GetLastTransitionHash() string {
	if m != nil {
		return m.LastTransitionHash
	}
	return ""
}

type ChainEndpointRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainEndpointRequest) Reset()         { *m = ChainEndpointRequest{} }
func (m *ChainEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ChainEndpointRequest) ProtoMessage()    {}
func (*ChainEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{3}
}

func (m *ChainEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainEndpointRequest.Unmarshal(m, b)
}
func (m *ChainEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainEndpointRequest.Marshal(b, m, deterministic)
}
func (m *ChainEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainEndpointRequest.Merge(m, src)
}
func (m *ChainEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ChainEndpointRequest.Size(m)
}
func (m *ChainEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChainEndpointRequest proto.InternalMessageInfo

func (m *ChainEndpointRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type BlockHashEndpointRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	BlockHash            string   `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHashEndpointRequest) Reset()         { *m = BlockHashEndpointRequest{} }
func (m *BlockHashEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*BlockHashEndpointRequest) ProtoMessage()    {}
func (*BlockHashEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{4}
}

func (m *BlockHashEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHashEndpointRequest.Unmarshal(m, b)
}
func (m *BlockHashEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHashEndpointRequest.Marshal(b, m, deterministic)
}
func (m *BlockHashEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHashEndpointRequest.Merge(m, src)
}
func (m *BlockHashEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_BlockHashEndpointRequest.Size(m)
}
func (m *BlockHashEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHashEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHashEndpointRequest proto.InternalMessageInfo

func (m *BlockHashEndpointRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *BlockHashEndpointRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type BlockHeightEndpointRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	BlockHeight          int32    `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeightEndpointRequest) Reset()         { *m = BlockHeightEndpointRequest{} }
func (m *BlockHeightEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*BlockHeightEndpointRequest) ProtoMessage()    {}
func (*BlockHeightEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{5}
}

func (m *BlockHeightEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeightEndpointRequest.Unmarshal(m, b)
}
func (m *BlockHeightEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeightEndpointRequest.Marshal(b, m, deterministic)
}
func (m *BlockHeightEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeightEndpointRequest.Merge(m, src)
}
func (m *BlockHeightEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_BlockHeightEndpointRequest.Size(m)
}
func (m *BlockHeightEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeightEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeightEndpointRequest proto.InternalMessageInfo

func (m *BlockHeightEndpointRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *BlockHeightEndpointRequest) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type FeatureEndpointRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureEndpointRequest) Reset()         { *m = FeatureEndpointRequest{} }
func (m *FeatureEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*FeatureEndpointRequest) ProtoMessage()    {}
func (*FeatureEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_612d546a9cdb7ff3, []int{6}
}

func (m *FeatureEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureEndpointRequest.Unmarshal(m, b)
}
func (m *FeatureEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureEndpointRequest.Marshal(b, m, deterministic)
}
func (m *FeatureEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureEndpointRequest.Merge(m, src)
}
func (m *FeatureEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_FeatureEndpointRequest.Size(m)
}
func (m *FeatureEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureEndpointRequest proto.InternalMessageInfo

func (m *FeatureEndpointRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *FeatureEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Blockchain)(nil), "fairwaycorp.blockchainprotobuf.btc.Blockchain")
	proto.RegisterType((*Block)(nil), "fairwaycorp.blockchainprotobuf.btc.Block")
	proto.RegisterType((*Feature)(nil), "fairwaycorp.blockchainprotobuf.btc.Feature")
	proto.RegisterType((*ChainEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.ChainEndpointRequest")
	proto.RegisterType((*BlockHashEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.BlockHashEndpointRequest")
	proto.RegisterType((*BlockHeightEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.BlockHeightEndpointRequest")
	proto.RegisterType((*FeatureEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.FeatureEndpointRequest")
}

func init() { proto.RegisterFile("blockchainMessage.proto", fileDescriptor_612d546a9cdb7ff3) }

var fileDescriptor_612d546a9cdb7ff3 = []byte{
	// 753 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x8e, 0xe3, 0x44,
	0x10, 0x55, 0x36, 0xe3, 0xcc, 0xba, 0x92, 0xc9, 0x26, 0x26, 0x0c, 0x16, 0x68, 0xa5, 0xd9, 0xcc,
	0x22, 0x0d, 0x42, 0x49, 0x56, 0x82, 0x57, 0x84, 0x34, 0x2b, 0xa2, 0x95, 0x10, 0x12, 0x32, 0xe1,
	0x01, 0x5e, 0x2c, 0x5f, 0x2a, 0x71, 0x2b, 0x4e, 0x77, 0x68, 0xb7, 0x73, 0xe1, 0xbf, 0xf8, 0x19,
	0x3e, 0x84, 0x67, 0x54, 0xd5, 0xb6, 0x63, 0x2e, 0x23, 0xcd, 0x5b, 0xd5, 0xa9, 0xd3, 0xe5, 0x72,
	0x9d, 0xd3, 0x0d, 0x9f, 0xc4, 0xb9, 0x4a, 0xb6, 0x49, 0x16, 0x09, 0xf9, 0x03, 0x16, 0x45, 0xb4,
	0xc1, 0xf9, 0x5e, 0x2b, 0xa3, 0xbc, 0xe9, 0x3a, 0x12, 0xfa, 0x18, 0x9d, 0x13, 0xa5, 0xf7, 0xf3,
	0x0b, 0x89, 0x8b, 0x71, 0xb9, 0x9e, 0xc7, 0x26, 0x99, 0xfe, 0xd9, 0x05, 0x78, 0x6c, 0x4a, 0x9e,
	0x07, 0x57, 0x32, 0xda, 0xa1, 0xdf, 0xb9, 0xeb, 0x3c, 0xb8, 0x01, 0xc7, 0xde, 0x2d, 0xf4, 0x32,
	0x14, 0x9b, 0xcc, 0xf8, 0x2f, 0xee, 0x3a, 0x0f, 0x4e, 0x50, 0x65, 0xc4, 0xcd, 0xa2, 0x22, 0xf3,
	0xbb, 0x96, 0x4b, 0x31, 0x61, 0x46, 0xec, 0xd0, 0xbf, 0xb2, 0x18, 0xc5, 0xde, 0x6b, 0x80, 0x3c,
	0x32, 0x58, 0x98, 0xb0, 0xd4, 0xb9, 0xef, 0x70, 0xc5, 0xb5, 0xc8, 0xcf, 0x3a, 0xf7, 0xee, 0xe1,
	0x66, 0xaf, 0xf1, 0x20, 0x54, 0x59, 0x84, 0xdc, 0xaf, 0xc7, 0x8c, 0x41, 0x0d, 0x7e, 0xa0, 0xbe,
	0x6f, 0xa0, 0xc9, 0xb9, 0xcb, 0x35, 0x73, 0xfa, 0x35, 0x46, 0x7d, 0x5e, 0x03, 0xec, 0x11, 0x75,
	0x98, 0xa8, 0x52, 0x1a, 0xff, 0x25, 0x8f, 0xea, 0x12, 0xf2, 0x9e, 0x00, 0xef, 0x73, 0x78, 0x95,
	0x89, 0x4d, 0x16, 0xae, 0x11, 0xc3, 0x3d, 0xea, 0x70, 0x1b, 0xfb, 0x2e, 0x73, 0x06, 0x04, 0x2f,
	0x11, 0x7f, 0x44, 0xfd, 0x7d, 0xec, 0x7d, 0x01, 0xe3, 0x1d, 0xa6, 0xa2, 0xdc, 0xb5, 0x89, 0xc0,
	0xc4, 0xa1, 0x2d, 0x34, 0xd4, 0x7b, 0x18, 0xe6, 0xea, 0xd8, 0xe6, 0xf5, 0x99, 0xd7, 0xcf, 0xd5,
	0xb1, 0x21, 0x7d, 0x09, 0xe3, 0x52, 0x26, 0x4a, 0xae, 0x85, 0xde, 0x61, 0x5a, 0x0d, 0x37, 0x60,
	0xde, 0xa8, 0x55, 0xb0, 0x33, 0x3e, 0xc0, 0x28, 0x8f, 0x0a, 0x13, 0xae, 0x95, 0xde, 0x86, 0xd5,
	0xce, 0x6f, 0xec, 0xb7, 0x09, 0x5f, 0x2a, 0xbd, 0xfd, 0x60, 0x77, 0xff, 0x16, 0x86, 0x2d, 0x26,
	0x6d, 0x6d, 0x68, 0xb7, 0xd6, 0xf0, 0xa2, 0x22, 0x9b, 0xfe, 0xd5, 0x05, 0x87, 0xc5, 0x6d, 0xb4,
	0xea, 0xb4, 0xb4, 0x7a, 0x4a, 0xd7, 0x09, 0x38, 0x29, 0xee, 0x8d, 0x15, 0xd6, 0x09, 0x6c, 0xe2,
	0xf9, 0x70, 0x2d, 0xd1, 0x1c, 0x95, 0xde, 0x56, 0xe2, 0xd6, 0x29, 0xf1, 0x8d, 0x32, 0x91, 0x95,
	0xd6, 0x09, 0x6c, 0x42, 0x5f, 0x5c, 0x23, 0x16, 0xac, 0xa6, 0x13, 0x70, 0x4c, 0x58, 0x21, 0x7e,
	0x47, 0x56, 0xcf, 0x09, 0x38, 0xf6, 0x46, 0xd0, 0x3d, 0xa0, 0xae, 0xf4, 0xa2, 0xb0, 0xf1, 0x90,
	0xdb, 0xf2, 0xd0, 0x3d, 0xdc, 0x68, 0x4c, 0x50, 0x1c, 0x30, 0x0d, 0xb9, 0x08, 0xf6, 0x77, 0x6b,
	0x70, 0x55, 0x19, 0x4d, 0x63, 0x1e, 0x9d, 0x31, 0x0d, 0xe3, 0x33, 0x8b, 0xe1, 0x06, 0x6e, 0x85,
	0x3c, 0x9e, 0xa9, 0x6f, 0x2c, 0x4c, 0x51, 0x6d, 0x9f, 0x63, 0x9a, 0x5d, 0x2a, 0x99, 0x60, 0xb5,
	0x66, 0x9b, 0x78, 0x63, 0xb8, 0x92, 0xa1, 0x39, 0xf1, 0x4e, 0x9d, 0xa0, 0x2b, 0x57, 0x27, 0x76,
	0x97, 0xc6, 0x43, 0xc8, 0xd7, 0xc8, 0x7f, 0x65, 0x7b, 0x13, 0x62, 0xf7, 0xfb, 0x16, 0x86, 0x97,
	0x32, 0x3b, 0x74, 0x74, 0x71, 0x31, 0x53, 0xc8, 0xa2, 0x1f, 0x43, 0xcf, 0x9c, 0xb8, 0x3a, 0xe6,
	0xaa, 0x63, 0x4e, 0x04, 0x7f, 0x06, 0xee, 0x4e, 0x6f, 0xf3, 0x50, 0x2b, 0x65, 0x7c, 0x8f, 0x2b,
	0x2f, 0x09, 0x08, 0x94, 0x62, 0x35, 0xcc, 0x49, 0xa4, 0x85, 0xff, 0xd1, 0x5d, 0xd7, 0x1e, 0x11,
	0x69, 0x41, 0xe3, 0x48, 0x3c, 0x99, 0xd0, 0x96, 0x26, 0x76, 0x1c, 0x42, 0x56, 0x04, 0x4c, 0xff,
	0xe8, 0xc0, 0xf5, 0x12, 0x23, 0x53, 0x6a, 0x6c, 0x0b, 0xd7, 0xf9, 0xa7, 0x70, 0xf5, 0x65, 0x7f,
	0xd1, 0xba, 0xec, 0x13, 0x70, 0x0a, 0x13, 0x19, 0xac, 0x6e, 0xb5, 0x4d, 0xbc, 0xaf, 0xe1, 0x96,
	0xed, 0x66, 0x74, 0x24, 0x0b, 0x61, 0x84, 0x92, 0xb5, 0x3d, 0xc9, 0x0b, 0xdd, 0x60, 0x42, 0xd5,
	0x55, 0x53, 0xac, 0x4c, 0xfa, 0x0e, 0x26, 0xff, 0x39, 0x45, 0x26, 0xb4, 0x4f, 0x80, 0xf7, 0xaf,
	0x33, 0x64, 0xd8, 0x77, 0x30, 0x79, 0x4f, 0xef, 0xd0, 0x77, 0x32, 0xdd, 0x2b, 0x21, 0x4d, 0x80,
	0xbf, 0x95, 0x58, 0x98, 0xa7, 0xff, 0x61, 0xfa, 0x13, 0xf8, 0xbc, 0x5e, 0x3a, 0xfe, 0xec, 0x53,
	0xb4, 0x3e, 0xab, 0x14, 0xcf, 0x63, 0xff, 0xdf, 0x8d, 0xeb, 0x3e, 0xd3, 0x5f, 0xe0, 0x53, 0xdb,
	0x94, 0xff, 0xe3, 0xf9, 0x6d, 0xdf, 0xc0, 0xa0, 0x6a, 0xdb, 0xbe, 0x57, 0xfd, 0xf8, 0xd2, 0x6b,
	0xba, 0x84, 0xdb, 0x4a, 0x98, 0xe7, 0xb7, 0xfd, 0x1f, 0x9d, 0x1e, 0xbf, 0xfd, 0xf5, 0x9b, 0x8d,
	0x30, 0x59, 0x19, 0xcf, 0x13, 0xb5, 0x5b, 0x54, 0x0f, 0xfd, 0x8c, 0x5e, 0xfa, 0xc5, 0xe5, 0xa5,
	0x9f, 0xd5, 0x4f, 0xfd, 0x82, 0x83, 0x64, 0xb6, 0x41, 0x39, 0xdb, 0xa8, 0x45, 0x6c, 0x92, 0xb8,
	0xc7, 0xd0, 0x57, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xf5, 0x96, 0xdf, 0x3e, 0x06, 0x00,
	0x00,
}
