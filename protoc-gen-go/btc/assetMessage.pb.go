// Code generated by protoc-gen-go. DO NOT EDIT.
// source: assetMessage.proto

package btc // import "github.com/fairway-corp/blockchain-protobuf/protoc-gen-go/btc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IssueAssetEndpointRequest struct {
	Network              NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IssueAssetEndpointRequest) Reset()         { *m = IssueAssetEndpointRequest{} }
func (m *IssueAssetEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*IssueAssetEndpointRequest) ProtoMessage()    {}
func (*IssueAssetEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_assetMessage_9f1d34860244ab21, []int{0}
}
func (m *IssueAssetEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueAssetEndpointRequest.Unmarshal(m, b)
}
func (m *IssueAssetEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueAssetEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *IssueAssetEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueAssetEndpointRequest.Merge(dst, src)
}
func (m *IssueAssetEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_IssueAssetEndpointRequest.Size(m)
}
func (m *IssueAssetEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueAssetEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IssueAssetEndpointRequest proto.InternalMessageInfo

func (m *IssueAssetEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

type TransferAssetEndpointRequest struct {
	Network NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	Assetid string               `protobuf:"bytes,2,opt,name=assetid,proto3" json:"assetid,omitempty"`
	// The private key being used to issue or transfer assets.
	FromPrivate string `protobuf:"bytes,3,opt,name=from_private,json=fromPrivate,proto3" json:"from_private,omitempty"`
	// The target OAP address assets for issue or transfer.
	ToAddress string `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// The amount of assets being issued or transfered.
	Amount int32 `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	// Optional Hex-encoded metadata that can optionally be encoded into the issue or transfer transaction.
	Metadata             string   `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferAssetEndpointRequest) Reset()         { *m = TransferAssetEndpointRequest{} }
func (m *TransferAssetEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*TransferAssetEndpointRequest) ProtoMessage()    {}
func (*TransferAssetEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_assetMessage_9f1d34860244ab21, []int{1}
}
func (m *TransferAssetEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferAssetEndpointRequest.Unmarshal(m, b)
}
func (m *TransferAssetEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferAssetEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *TransferAssetEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferAssetEndpointRequest.Merge(dst, src)
}
func (m *TransferAssetEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_TransferAssetEndpointRequest.Size(m)
}
func (m *TransferAssetEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferAssetEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferAssetEndpointRequest proto.InternalMessageInfo

func (m *TransferAssetEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *TransferAssetEndpointRequest) GetAssetid() string {
	if m != nil {
		return m.Assetid
	}
	return ""
}

func (m *TransferAssetEndpointRequest) GetFromPrivate() string {
	if m != nil {
		return m.FromPrivate
	}
	return ""
}

func (m *TransferAssetEndpointRequest) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *TransferAssetEndpointRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransferAssetEndpointRequest) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

type ListAssetTXsEndpointRequest struct {
	Network              NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	Assetid              string               `protobuf:"bytes,2,opt,name=assetid,proto3" json:"assetid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListAssetTXsEndpointRequest) Reset()         { *m = ListAssetTXsEndpointRequest{} }
func (m *ListAssetTXsEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ListAssetTXsEndpointRequest) ProtoMessage()    {}
func (*ListAssetTXsEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_assetMessage_9f1d34860244ab21, []int{2}
}
func (m *ListAssetTXsEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAssetTXsEndpointRequest.Unmarshal(m, b)
}
func (m *ListAssetTXsEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAssetTXsEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *ListAssetTXsEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAssetTXsEndpointRequest.Merge(dst, src)
}
func (m *ListAssetTXsEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ListAssetTXsEndpointRequest.Size(m)
}
func (m *ListAssetTXsEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAssetTXsEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAssetTXsEndpointRequest proto.InternalMessageInfo

func (m *ListAssetTXsEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *ListAssetTXsEndpointRequest) GetAssetid() string {
	if m != nil {
		return m.Assetid
	}
	return ""
}

type GetAssetTXEndpointRequest struct {
	Network              NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=fairwaycorp.blockchainprotobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	Assetid              string               `protobuf:"bytes,2,opt,name=assetid,proto3" json:"assetid,omitempty"`
	Txhash               string               `protobuf:"bytes,3,opt,name=txhash,proto3" json:"txhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetAssetTXEndpointRequest) Reset()         { *m = GetAssetTXEndpointRequest{} }
func (m *GetAssetTXEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetTXEndpointRequest) ProtoMessage()    {}
func (*GetAssetTXEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_assetMessage_9f1d34860244ab21, []int{3}
}
func (m *GetAssetTXEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAssetTXEndpointRequest.Unmarshal(m, b)
}
func (m *GetAssetTXEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAssetTXEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *GetAssetTXEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAssetTXEndpointRequest.Merge(dst, src)
}
func (m *GetAssetTXEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_GetAssetTXEndpointRequest.Size(m)
}
func (m *GetAssetTXEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAssetTXEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAssetTXEndpointRequest proto.InternalMessageInfo

func (m *GetAssetTXEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *GetAssetTXEndpointRequest) GetAssetid() string {
	if m != nil {
		return m.Assetid
	}
	return ""
}

func (m *GetAssetTXEndpointRequest) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

type GetAssetAddressEndpointRequest struct {
	Network              string   `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
	Assetid              string   `protobuf:"bytes,1,opt,name=assetid,proto3" json:"assetid,omitempty"`
	Oapaddr              string   `protobuf:"bytes,2,opt,name=oapaddr,proto3" json:"oapaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAssetAddressEndpointRequest) Reset()         { *m = GetAssetAddressEndpointRequest{} }
func (m *GetAssetAddressEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetAddressEndpointRequest) ProtoMessage()    {}
func (*GetAssetAddressEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_assetMessage_9f1d34860244ab21, []int{4}
}
func (m *GetAssetAddressEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAssetAddressEndpointRequest.Unmarshal(m, b)
}
func (m *GetAssetAddressEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAssetAddressEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *GetAssetAddressEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAssetAddressEndpointRequest.Merge(dst, src)
}
func (m *GetAssetAddressEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_GetAssetAddressEndpointRequest.Size(m)
}
func (m *GetAssetAddressEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAssetAddressEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAssetAddressEndpointRequest proto.InternalMessageInfo

func (m *GetAssetAddressEndpointRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *GetAssetAddressEndpointRequest) GetAssetid() string {
	if m != nil {
		return m.Assetid
	}
	return ""
}

func (m *GetAssetAddressEndpointRequest) GetOapaddr() string {
	if m != nil {
		return m.Oapaddr
	}
	return ""
}

func init() {
	proto.RegisterType((*IssueAssetEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.IssueAssetEndpointRequest")
	proto.RegisterType((*TransferAssetEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.TransferAssetEndpointRequest")
	proto.RegisterType((*ListAssetTXsEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.ListAssetTXsEndpointRequest")
	proto.RegisterType((*GetAssetTXEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.GetAssetTXEndpointRequest")
	proto.RegisterType((*GetAssetAddressEndpointRequest)(nil), "fairwaycorp.blockchainprotobuf.btc.GetAssetAddressEndpointRequest")
}

func init() { proto.RegisterFile("assetMessage.proto", fileDescriptor_assetMessage_9f1d34860244ab21) }

var fileDescriptor_assetMessage_9f1d34860244ab21 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x51, 0x4d, 0x8b, 0xd4, 0x40,
	0x10, 0x25, 0xab, 0x9b, 0x71, 0x4b, 0xf1, 0xd0, 0xc2, 0xd2, 0xbb, 0x7e, 0x30, 0xe6, 0x34, 0x97,
	0x24, 0xa0, 0x17, 0x2f, 0x22, 0x11, 0x44, 0x04, 0x15, 0x09, 0x7b, 0x10, 0x2f, 0x4b, 0xa7, 0xd3,
	0x49, 0x9a, 0x49, 0xba, 0x62, 0x77, 0xc5, 0xd1, 0xab, 0x57, 0x7f, 0x85, 0xff, 0x54, 0xd2, 0x49,
	0x1c, 0x46, 0x04, 0x6f, 0xce, 0x2d, 0xef, 0x75, 0xaa, 0xde, 0x47, 0x01, 0x13, 0xce, 0x29, 0x7a,
	0xa7, 0x9c, 0x13, 0xb5, 0x4a, 0x7a, 0x8b, 0x84, 0x2c, 0xaa, 0x84, 0xb6, 0x3b, 0xf1, 0x4d, 0xa2,
	0xed, 0x93, 0xa2, 0x45, 0xb9, 0x95, 0x8d, 0xd0, 0xc6, 0x3f, 0x16, 0x43, 0x95, 0x14, 0x24, 0x2f,
	0xef, 0x49, 0xec, 0x3a, 0x34, 0x07, 0x83, 0x11, 0xc2, 0xc5, 0x1b, 0xe7, 0x06, 0x95, 0x8d, 0x3b,
	0x5f, 0x99, 0xb2, 0x47, 0x6d, 0x28, 0x57, 0x9f, 0x07, 0xe5, 0x88, 0xe5, 0xb0, 0x32, 0x8a, 0x76,
	0x68, 0xb7, 0x3c, 0x58, 0x07, 0x9b, 0xbb, 0x4f, 0x9e, 0x25, 0xff, 0xd6, 0x49, 0xde, 0x4f, 0x23,
	0x59, 0xdb, 0xe2, 0x4e, 0x9b, 0x3a, 0x6b, 0xb5, 0x70, 0xf9, 0xb2, 0x28, 0xfa, 0x7e, 0x02, 0x0f,
	0xae, 0xac, 0x30, 0xae, 0x52, 0xf6, 0x7f, 0x89, 0x32, 0x0e, 0x2b, 0x5f, 0x9a, 0x2e, 0xf9, 0xc9,
	0x3a, 0xd8, 0x9c, 0xe5, 0x0b, 0x64, 0x8f, 0xe1, 0x4e, 0x65, 0xb1, 0xbb, 0xee, 0xad, 0xfe, 0x22,
	0x48, 0xf1, 0x1b, 0xfe, 0xf9, 0xf6, 0xc8, 0x7d, 0x98, 0x28, 0xf6, 0x10, 0x80, 0xf0, 0x5a, 0x94,
	0xa5, 0x55, 0xce, 0xf1, 0x9b, 0xfe, 0x87, 0x33, 0xc2, 0x6c, 0x22, 0xd8, 0x39, 0x84, 0xa2, 0xc3,
	0xc1, 0x10, 0x3f, 0x5d, 0x07, 0x9b, 0xd3, 0x7c, 0x46, 0xec, 0x12, 0x6e, 0x75, 0x8a, 0x44, 0x29,
	0x48, 0xf0, 0xd0, 0x0f, 0xfd, 0xc6, 0xd1, 0x8f, 0x00, 0xee, 0xbf, 0xd5, 0x8e, 0x7c, 0x01, 0x57,
	0x1f, 0xdd, 0x51, 0x3b, 0x88, 0x7e, 0x06, 0x70, 0xf1, 0x5a, 0x2d, 0x66, 0x8e, 0x7b, 0x8f, 0x73,
	0x08, 0xe9, 0x6b, 0x23, 0x5c, 0x33, 0x5f, 0x62, 0x46, 0x91, 0x81, 0x47, 0x8b, 0xc5, 0xb9, 0xf8,
	0x3f, 0x7d, 0xf2, 0xbd, 0x4f, 0x98, 0x76, 0xfe, 0x45, 0x2d, 0x38, 0x54, 0xe3, 0xb0, 0x42, 0xd1,
	0x8f, 0xa7, 0x5d, 0x7c, 0xcc, 0xf0, 0xe5, 0x8b, 0x4f, 0xcf, 0x6b, 0x4d, 0xcd, 0x50, 0x24, 0x12,
	0xbb, 0x74, 0x0e, 0x1c, 0x8f, 0x89, 0xd3, 0x7d, 0xe2, 0x78, 0x89, 0x9c, 0xfa, 0x0f, 0x19, 0xd7,
	0xca, 0xc4, 0x35, 0xa6, 0x05, 0xc9, 0x22, 0xf4, 0xd4, 0xd3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0xd0, 0x16, 0x88, 0xae, 0x03, 0x00, 0x00,
}
