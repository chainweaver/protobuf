// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addressMessage.proto

package btc // import "github.com/chainweaver/protobuf/protoc-gen-go/btc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddressBalanceEndpointRequest struct {
	Network NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=chainweaver.protobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	Address string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// If omitWalletAddresses is true and you’re querying a Wallet or HDWallet, the response will omit address information (useful to speed up the API call for larger wallets).
	OmitWalletAddresses  bool     `protobuf:"varint,3,opt,name=omitWalletAddresses,proto3" json:"omitWalletAddresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressBalanceEndpointRequest) Reset()         { *m = AddressBalanceEndpointRequest{} }
func (m *AddressBalanceEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*AddressBalanceEndpointRequest) ProtoMessage()    {}
func (*AddressBalanceEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_addressMessage_6577751fe0f8228b, []int{0}
}
func (m *AddressBalanceEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressBalanceEndpointRequest.Unmarshal(m, b)
}
func (m *AddressBalanceEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressBalanceEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *AddressBalanceEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressBalanceEndpointRequest.Merge(dst, src)
}
func (m *AddressBalanceEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_AddressBalanceEndpointRequest.Size(m)
}
func (m *AddressBalanceEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressBalanceEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressBalanceEndpointRequest proto.InternalMessageInfo

func (m *AddressBalanceEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *AddressBalanceEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressBalanceEndpointRequest) GetOmitWalletAddresses() bool {
	if m != nil {
		return m.OmitWalletAddresses
	}
	return false
}

type AddressEndpointRequest struct {
	Network NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=chainweaver.protobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	Address string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// If unspentOnly is true, filters response to only include unspent transaction outputs (UTXOs).
	UnspentOnly bool `protobuf:"varint,3,opt,name=unspentOnly,proto3" json:"unspentOnly,omitempty"`
	// If includeScript is true, includes raw script of input or output within returned TXRefs.
	IncludeScript bool `protobuf:"varint,4,opt,name=includeScript,proto3" json:"includeScript,omitempty"`
	// If true, includes the confidence attribute (useful for unconfirmed transactions) within returned TXRefs. For more info about this figure, check the Confidence Factor documentation.
	IncludeConfidence bool `protobuf:"varint,5,opt,name=includeConfidence,proto3" json:"includeConfidence,omitempty"`
	// Filters response to only include transactions below before height in the blockchain.
	Before int32 `protobuf:"varint,6,opt,name=before,proto3" json:"before,omitempty"`
	// Filters response to only include transactions above after height in the blockchain.
	After int32 `protobuf:"varint,7,opt,name=after,proto3" json:"after,omitempty"`
	// limit sets the minimum number of returned TXRefs; there can be less if there are less than limit TXRefs associated with this address, but there can be more in the rare case of more TXRefs in the block at the bottom of your call. This ensures paging by block height never misses TXRefs. Defaults to 200, maximum is 2000.
	Limit int32 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	// If set, only returns the balance and TXRefs that have at least this number of confirmations.
	Confirmations int32 `protobuf:"varint,9,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	// Filters response to only include TXRefs above confidence in percent; e.g., if this is set to 99, will only return TXRefs with 99% confidence or above (including all confirmed TXRefs). For more detail on confidence, check the Confidence Factor documentation.
	Confidence int32 `protobuf:"varint,10,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// If omitWalletAddresses is true and you’re querying a Wallet or HDWallet, the response will omit address information (useful to speed up the API call for larger wallets).
	OmitWalletAddresses  bool     `protobuf:"varint,11,opt,name=omitWalletAddresses,proto3" json:"omitWalletAddresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressEndpointRequest) Reset()         { *m = AddressEndpointRequest{} }
func (m *AddressEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*AddressEndpointRequest) ProtoMessage()    {}
func (*AddressEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_addressMessage_6577751fe0f8228b, []int{1}
}
func (m *AddressEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressEndpointRequest.Unmarshal(m, b)
}
func (m *AddressEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *AddressEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressEndpointRequest.Merge(dst, src)
}
func (m *AddressEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_AddressEndpointRequest.Size(m)
}
func (m *AddressEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressEndpointRequest proto.InternalMessageInfo

func (m *AddressEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *AddressEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressEndpointRequest) GetUnspentOnly() bool {
	if m != nil {
		return m.UnspentOnly
	}
	return false
}

func (m *AddressEndpointRequest) GetIncludeScript() bool {
	if m != nil {
		return m.IncludeScript
	}
	return false
}

func (m *AddressEndpointRequest) GetIncludeConfidence() bool {
	if m != nil {
		return m.IncludeConfidence
	}
	return false
}

func (m *AddressEndpointRequest) GetBefore() int32 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *AddressEndpointRequest) GetAfter() int32 {
	if m != nil {
		return m.After
	}
	return 0
}

func (m *AddressEndpointRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AddressEndpointRequest) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *AddressEndpointRequest) GetConfidence() int32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *AddressEndpointRequest) GetOmitWalletAddresses() bool {
	if m != nil {
		return m.OmitWalletAddresses
	}
	return false
}

type AddressFullEndpointRequest struct {
	Network NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=chainweaver.protobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	// address
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Filters response to only include transactions below before height in the blockchain.
	Before int32 `protobuf:"varint,3,opt,name=before,proto3" json:"before,omitempty"`
	// Filters response to only include transactions above after height in the blockchain.
	After int32 `protobuf:"varint,4,opt,name=after,proto3" json:"after,omitempty"`
	// limit sets the minimum number of returned TXs; there can be less if there are less than limit TXs associated with this address, but there can also be more in the rare case of more TXs in the block at the bottom of your call. This ensures paging by block height never misses TXs. Defaults to 10, maximum is 50.
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// This filters the TXInputs/TXOutputs within the returned TXs to include a maximum of txlimit items.
	Txlimit int32 `protobuf:"varint,6,opt,name=txlimit,proto3" json:"txlimit,omitempty"`
	// If set, only returns the balance and TXs that have at least this number of confirmations.
	Confirmations int32 `protobuf:"varint,7,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	// Filters response to only include TXs above confidence in percent; e.g., if this is set to 99, will only return TXs with 99% confidence or above (including all confirmed TXs). For more detail on confidence, check the Confidence Factor documentation.
	Confidence int32 `protobuf:"varint,8,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// If true, includes hex-encoded raw transaction for each TX; false by default.
	IncludeHex bool `protobuf:"varint,9,opt,name=includeHex,proto3" json:"includeHex,omitempty"`
	// If true, includes the confidence attribute (useful for unconfirmed transactions) within returned TXs. For more info about this figure, check the Confidence Factor documentation.
	IncludeConfidence bool `protobuf:"varint,10,opt,name=includeConfidence,proto3" json:"includeConfidence,omitempty"`
	// If omitWalletAddresses is true and you’re querying a Wallet or HDWallet, the response will omit address information (useful to speed up the API call for larger wallets).
	OmitWalletAddresses  bool     `protobuf:"varint,11,opt,name=omitWalletAddresses,proto3" json:"omitWalletAddresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressFullEndpointRequest) Reset()         { *m = AddressFullEndpointRequest{} }
func (m *AddressFullEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*AddressFullEndpointRequest) ProtoMessage()    {}
func (*AddressFullEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_addressMessage_6577751fe0f8228b, []int{2}
}
func (m *AddressFullEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressFullEndpointRequest.Unmarshal(m, b)
}
func (m *AddressFullEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressFullEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *AddressFullEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressFullEndpointRequest.Merge(dst, src)
}
func (m *AddressFullEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_AddressFullEndpointRequest.Size(m)
}
func (m *AddressFullEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressFullEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressFullEndpointRequest proto.InternalMessageInfo

func (m *AddressFullEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *AddressFullEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressFullEndpointRequest) GetBefore() int32 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *AddressFullEndpointRequest) GetAfter() int32 {
	if m != nil {
		return m.After
	}
	return 0
}

func (m *AddressFullEndpointRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AddressFullEndpointRequest) GetTxlimit() int32 {
	if m != nil {
		return m.Txlimit
	}
	return 0
}

func (m *AddressFullEndpointRequest) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *AddressFullEndpointRequest) GetConfidence() int32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *AddressFullEndpointRequest) GetIncludeHex() bool {
	if m != nil {
		return m.IncludeHex
	}
	return false
}

func (m *AddressFullEndpointRequest) GetIncludeConfidence() bool {
	if m != nil {
		return m.IncludeConfidence
	}
	return false
}

func (m *AddressFullEndpointRequest) GetOmitWalletAddresses() bool {
	if m != nil {
		return m.OmitWalletAddresses
	}
	return false
}

type GenerateAddressEndpointRequest struct {
	Network NetworkAllowingAlias `protobuf:"varint,1,opt,name=network,proto3,enum=chainweaver.protobuf.btc.NetworkAllowingAlias" json:"network,omitempty"`
	// Standard address representation.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Hex-encoded Public key.
	Public string `protobuf:"bytes,3,opt,name=public,proto3" json:"public,omitempty"`
	// Hex-encoded Private key.
	Private string `protobuf:"bytes,4,opt,name=private,proto3" json:"private,omitempty"`
	// Wallet import format, a common encoding for the private key.
	Wif string `protobuf:"bytes,5,opt,name=wif,proto3" json:"wif,omitempty"`
	// Optional Array of public keys to provide to generate a multisig address.
	Pubkeys []string `protobuf:"bytes,6,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
	// Optional If generating a multisig address, the type of multisig script; typically “multisig-n-of-m”, where n and m are integers.
	ScriptType string `protobuf:"bytes,7,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	// Optional If generating an OAP address, this represents the parent blockchain’s underlying address (the typical address listed above).
	OriginalAddress string `protobuf:"bytes,8,opt,name=original_address,json=originalAddress,proto3" json:"original_address,omitempty"`
	// Optional The OAP address, if generated using the Generate Asset Address Endpoint.
	OapAddress           string   `protobuf:"bytes,9,opt,name=oap_address,json=oapAddress,proto3" json:"oap_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateAddressEndpointRequest) Reset()         { *m = GenerateAddressEndpointRequest{} }
func (m *GenerateAddressEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateAddressEndpointRequest) ProtoMessage()    {}
func (*GenerateAddressEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_addressMessage_6577751fe0f8228b, []int{3}
}
func (m *GenerateAddressEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAddressEndpointRequest.Unmarshal(m, b)
}
func (m *GenerateAddressEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAddressEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *GenerateAddressEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAddressEndpointRequest.Merge(dst, src)
}
func (m *GenerateAddressEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateAddressEndpointRequest.Size(m)
}
func (m *GenerateAddressEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAddressEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAddressEndpointRequest proto.InternalMessageInfo

func (m *GenerateAddressEndpointRequest) GetNetwork() NetworkAllowingAlias {
	if m != nil {
		return m.Network
	}
	return NetworkAllowingAlias_MAINNET
}

func (m *GenerateAddressEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GenerateAddressEndpointRequest) GetPublic() string {
	if m != nil {
		return m.Public
	}
	return ""
}

func (m *GenerateAddressEndpointRequest) GetPrivate() string {
	if m != nil {
		return m.Private
	}
	return ""
}

func (m *GenerateAddressEndpointRequest) GetWif() string {
	if m != nil {
		return m.Wif
	}
	return ""
}

func (m *GenerateAddressEndpointRequest) GetPubkeys() []string {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

func (m *GenerateAddressEndpointRequest) GetScriptType() string {
	if m != nil {
		return m.ScriptType
	}
	return ""
}

func (m *GenerateAddressEndpointRequest) GetOriginalAddress() string {
	if m != nil {
		return m.OriginalAddress
	}
	return ""
}

func (m *GenerateAddressEndpointRequest) GetOapAddress() string {
	if m != nil {
		return m.OapAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*AddressBalanceEndpointRequest)(nil), "chainweaver.protobuf.btc.AddressBalanceEndpointRequest")
	proto.RegisterType((*AddressEndpointRequest)(nil), "chainweaver.protobuf.btc.AddressEndpointRequest")
	proto.RegisterType((*AddressFullEndpointRequest)(nil), "chainweaver.protobuf.btc.AddressFullEndpointRequest")
	proto.RegisterType((*GenerateAddressEndpointRequest)(nil), "chainweaver.protobuf.btc.GenerateAddressEndpointRequest")
}

func init() {
	proto.RegisterFile("addressMessage.proto", fileDescriptor_addressMessage_6577751fe0f8228b)
}

var fileDescriptor_addressMessage_6577751fe0f8228b = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xdf, 0x6e, 0xd3, 0x3e,
	0x18, 0x55, 0x96, 0xf5, 0x4f, 0xbe, 0xea, 0xf7, 0x63, 0x78, 0x53, 0x65, 0x4d, 0xa2, 0x44, 0x13,
	0x17, 0x45, 0x62, 0x29, 0xb0, 0x27, 0x28, 0x08, 0xd8, 0x0d, 0x20, 0x05, 0x24, 0x24, 0x6e, 0x26,
	0xc7, 0xfd, 0x9a, 0x59, 0x73, 0xec, 0x90, 0x38, 0xeb, 0xfa, 0x3e, 0x5c, 0x73, 0xc7, 0x73, 0xf0,
	0x4a, 0x28, 0x76, 0xc2, 0x5a, 0xb5, 0x15, 0xe2, 0xaa, 0x77, 0x3e, 0xc7, 0xc7, 0x5f, 0x8e, 0xce,
	0xb1, 0x03, 0x27, 0x6c, 0x36, 0x2b, 0xb0, 0x2c, 0xdf, 0x63, 0x59, 0xb2, 0x14, 0xa3, 0xbc, 0xd0,
	0x46, 0x13, 0xca, 0xaf, 0x99, 0x50, 0x0b, 0x64, 0xb7, 0x58, 0x38, 0x2a, 0xa9, 0xe6, 0x51, 0x62,
	0xf8, 0xe9, 0x31, 0xd7, 0x59, 0xa6, 0xd5, 0x9a, 0xfc, 0xec, 0xa7, 0x07, 0x8f, 0xa6, 0x6e, 0xce,
	0x2b, 0x26, 0x99, 0xe2, 0xf8, 0x46, 0xcd, 0x72, 0x2d, 0x94, 0x89, 0xf1, 0x5b, 0x85, 0xa5, 0x21,
	0x97, 0xd0, 0x53, 0x68, 0x16, 0xba, 0xb8, 0xa1, 0x5e, 0xe8, 0x8d, 0xff, 0x7f, 0x19, 0x45, 0xbb,
	0x3e, 0x11, 0x7d, 0x70, 0xc2, 0xa9, 0x94, 0x7a, 0x21, 0x54, 0x3a, 0x95, 0x82, 0x95, 0x71, 0x7b,
	0x9c, 0x50, 0xe8, 0x35, 0x96, 0xe9, 0x41, 0xe8, 0x8d, 0x83, 0xb8, 0x85, 0xe4, 0x39, 0x1c, 0xeb,
	0x4c, 0x98, 0x2f, 0x4c, 0x4a, 0x34, 0x8d, 0x1d, 0x2c, 0xa9, 0x1f, 0x7a, 0xe3, 0x7e, 0xbc, 0x6d,
	0xeb, 0xec, 0x87, 0x0f, 0xc3, 0x06, 0xed, 0xc3, 0x70, 0x08, 0x83, 0x4a, 0x95, 0x39, 0x2a, 0xf3,
	0x51, 0xc9, 0x65, 0x63, 0x74, 0x95, 0x22, 0x4f, 0xe0, 0x3f, 0xa1, 0xb8, 0xac, 0x66, 0xf8, 0x89,
	0x17, 0x22, 0x37, 0xf4, 0xd0, 0x6a, 0xd6, 0x49, 0xf2, 0x0c, 0x1e, 0x36, 0xc4, 0x6b, 0xad, 0xe6,
	0x62, 0x86, 0x8a, 0x23, 0xed, 0x58, 0xe5, 0xe6, 0x06, 0x19, 0x42, 0x37, 0xc1, 0xb9, 0x2e, 0x90,
	0x76, 0x43, 0x6f, 0xdc, 0x89, 0x1b, 0x44, 0x4e, 0xa0, 0xc3, 0xe6, 0x06, 0x0b, 0xda, 0xb3, 0xb4,
	0x03, 0x35, 0x2b, 0x45, 0x26, 0x0c, 0xed, 0x3b, 0xd6, 0x82, 0xda, 0x17, 0xaf, 0x27, 0x16, 0x19,
	0x33, 0x42, 0xab, 0x92, 0x06, 0x76, 0x77, 0x9d, 0x24, 0x23, 0x00, 0x7e, 0x6f, 0x08, 0xac, 0x64,
	0x85, 0xd9, 0x55, 0xd8, 0x60, 0x77, 0x61, 0xdf, 0x7d, 0x38, 0x6d, 0xd0, 0xdb, 0x4a, 0xca, 0x7d,
	0x94, 0x76, 0x1f, 0x9f, 0xbf, 0x3d, 0xbe, 0xc3, 0xad, 0xf1, 0x75, 0x56, 0xe3, 0xa3, 0xd0, 0x33,
	0x77, 0x8e, 0x77, 0x1d, 0xb4, 0x70, 0x33, 0xd8, 0xde, 0xdf, 0x83, 0xed, 0x6f, 0x04, 0x3b, 0x02,
	0x68, 0x7a, 0xbf, 0xc4, 0x3b, 0xdb, 0x4d, 0x3f, 0x5e, 0x61, 0xb6, 0x5f, 0x18, 0xd8, 0x75, 0x61,
	0xfe, 0xbd, 0xa6, 0x5f, 0x07, 0x30, 0x7a, 0x87, 0x0a, 0x0b, 0x66, 0x70, 0x8f, 0xef, 0x6b, 0x08,
	0xdd, 0xbc, 0x4a, 0xa4, 0xe0, 0xb6, 0xaa, 0x20, 0x6e, 0x50, 0x7d, 0x22, 0x2f, 0xc4, 0x2d, 0x33,
	0x68, 0xcb, 0x0a, 0xe2, 0x16, 0x92, 0x23, 0xf0, 0x17, 0x62, 0x6e, 0xcb, 0x0a, 0xe2, 0x7a, 0x69,
	0xb5, 0x55, 0x72, 0x83, 0xcb, 0x92, 0x76, 0x43, 0xdf, 0x6a, 0x1d, 0x24, 0x8f, 0x61, 0x50, 0xda,
	0xf7, 0x77, 0x65, 0x96, 0x39, 0xda, 0xa2, 0x82, 0x18, 0x1c, 0xf5, 0x79, 0x99, 0x23, 0x79, 0x0a,
	0x47, 0xba, 0x10, 0xa9, 0x50, 0x4c, 0x5e, 0xb5, 0x0e, 0xfb, 0x56, 0xf5, 0xa0, 0xe5, 0x9b, 0x70,
	0xea, 0x59, 0x9a, 0xe5, 0x7f, 0x54, 0x81, 0x9b, 0xa5, 0x59, 0xde, 0xfe, 0x55, 0x2f, 0xbe, 0xbe,
	0x48, 0x85, 0xb9, 0xae, 0x92, 0x88, 0xeb, 0x6c, 0xb2, 0x92, 0xd4, 0xa4, 0x4d, 0xca, 0x2d, 0xf8,
	0x79, 0x8a, 0xea, 0x3c, 0xd5, 0x93, 0xc4, 0xf0, 0xa4, 0x6b, 0xa9, 0x8b, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x8a, 0x63, 0x58, 0x45, 0xe4, 0x05, 0x00, 0x00,
}
