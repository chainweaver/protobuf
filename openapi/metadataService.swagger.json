{
  "swagger": "2.0",
  "info": {
    "title": "metadataService.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/addrs/{address}/meta": {
      "get": {
        "operationId": "GetMetadataAddressEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufKeyValues"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "private",
            "description": "If private is true, it will return privately stored metadata under your token. Otherwise, returns public metadata. If not set, it defaults to false, returning public data.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "MetadataService"
        ]
      },
      "delete": {
        "operationId": "DeleteMetadataAddressEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MetadataService"
        ]
      },
      "put": {
        "operationId": "PutMetadataAddressEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockchainprotobufPutMetadataAddressEndpointRequest"
            }
          }
        ],
        "tags": [
          "MetadataService"
        ]
      }
    },
    "/blocks/{block_hash}/meta": {
      "put": {
        "operationId": "PutMetadataBlockhashEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "block_hash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockchainprotobufPutMetadataBlockhashEndpointRequest"
            }
          }
        ],
        "tags": [
          "MetadataService"
        ]
      }
    },
    "/blocks/{block_height}/meta": {
      "delete": {
        "operationId": "DeleteMetadataBlockheightEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "block_height",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MetadataService"
        ]
      }
    },
    "/blocks/{blockhash}/meta": {
      "get": {
        "operationId": "GetMetadataBlockhashEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufKeyValues"
            }
          }
        },
        "parameters": [
          {
            "name": "blockhash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "private",
            "description": "If private is true, it will return privately stored metadata under your token. Otherwise, returns public metadata. If not set, it defaults to false, returning public data.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "MetadataService"
        ]
      }
    },
    "/txs/{txhash}/meta": {
      "get": {
        "operationId": "GetMetadataTxhashEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufKeyValues"
            }
          }
        },
        "parameters": [
          {
            "name": "txhash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "private",
            "description": "If private is true, it will return privately stored metadata under your token. Otherwise, returns public metadata. If not set, it defaults to false, returning public data.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "MetadataService"
        ]
      },
      "delete": {
        "operationId": "DeleteMetadataTxhashEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "txhash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MetadataService"
        ]
      },
      "put": {
        "operationId": "PutMetadataTxhashEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "txhash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockchainprotobufPutMetadataTxhashEndpointRequest"
            }
          }
        ],
        "tags": [
          "MetadataService"
        ]
      }
    }
  },
  "definitions": {
    "blockchainprotobufKeyPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "blockchainprotobufKeyValues": {
      "type": "object",
      "properties": {
        "keypair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufKeyPair"
          }
        }
      }
    },
    "blockchainprotobufNullValue": {
      "type": "object"
    },
    "blockchainprotobufPutMetadataAddressEndpointRequest": {
      "type": "object",
      "properties": {
        "keypair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufKeyPair"
          }
        },
        "address": {
          "type": "string"
        },
        "private": {
          "type": "boolean",
          "format": "boolean",
          "description": "If private is true, it will set/update privately stored metadata under your token. Otherwise, sets public metadata. If not set, it defaults to false, setting public metadata."
        }
      }
    },
    "blockchainprotobufPutMetadataBlockhashEndpointRequest": {
      "type": "object",
      "properties": {
        "keypair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufKeyPair"
          }
        },
        "block_hash": {
          "type": "string"
        },
        "private": {
          "type": "boolean",
          "format": "boolean",
          "description": "If private is true, it will set/update privately stored metadata under your token. Otherwise, sets public metadata. If not set, it defaults to false, setting public metadata."
        }
      }
    },
    "blockchainprotobufPutMetadataTxhashEndpointRequest": {
      "type": "object",
      "properties": {
        "keypair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufKeyPair"
          }
        },
        "txhash": {
          "type": "string"
        },
        "private": {
          "type": "boolean",
          "format": "boolean",
          "description": "If private is true, it will set/update privately stored metadata under your token. Otherwise, sets public metadata. If not set, it defaults to false, setting public metadata."
        }
      }
    }
  }
}
