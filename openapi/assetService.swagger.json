{
  "swagger": "2.0",
  "info": {
    "title": "assetService.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/oap/addrs": {
      "post": {
        "operationId": "GenerateAssetAddressEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufAddressKeychain"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/oap/issue": {
      "post": {
        "operationId": "IssueAssetEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufOAPTX"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/oap/{assetid}/addrs/{oapaddr}": {
      "get": {
        "operationId": "GetAssetAddressEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufAddress"
            }
          }
        },
        "parameters": [
          {
            "name": "assetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "oapaddr",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/oap/{assetid}/transfer": {
      "post": {
        "operationId": "TransferAssetEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufOAPTX"
            }
          }
        },
        "parameters": [
          {
            "name": "assetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/oap/{assetid}/txs": {
      "get": {
        "operationId": "ListAssetTXsEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufArrayString"
            }
          }
        },
        "parameters": [
          {
            "name": "assetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/oap/{assetid}/txs/{txhash}": {
      "get": {
        "operationId": "GetAssetTXEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blockchainprotobufOAPTX"
            }
          }
        },
        "parameters": [
          {
            "name": "assetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "txhash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    }
  },
  "definitions": {
    "blockchainprotobufAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "wallet": {
          "$ref": "#/definitions/blockchainprotobufWallet"
        },
        "hd_wallet": {
          "$ref": "#/definitions/blockchainprotobufHDWallet"
        },
        "total_received": {
          "type": "integer",
          "format": "int32"
        },
        "total_sent": {
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "type": "integer",
          "format": "int32"
        },
        "unconfirmed_balance": {
          "type": "integer",
          "format": "int32"
        },
        "final_balance": {
          "type": "integer",
          "format": "int32"
        },
        "n_tx": {
          "type": "integer",
          "format": "int32"
        },
        "unconfirmed_n_tx": {
          "type": "integer",
          "format": "int32"
        },
        "final_n_tx": {
          "type": "integer",
          "format": "int32"
        },
        "tx_url": {
          "type": "string"
        },
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufTX"
          }
        },
        "txrefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufTXRef"
          }
        },
        "unconfirmed_txrefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufTXRef"
          }
        },
        "hasMore": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "blockchainprotobufAddressKeychain": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "public": {
          "type": "string"
        },
        "private": {
          "type": "string"
        },
        "wif": {
          "type": "string"
        },
        "pubkeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "script_type": {
          "type": "string"
        },
        "original_address": {
          "type": "string"
        },
        "oap_address": {
          "type": "string"
        }
      }
    },
    "blockchainprotobufArrayString": {
      "type": "object",
      "properties": {
        "arraystring": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "blockchainprotobufHDAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "public": {
          "type": "string"
        }
      }
    },
    "blockchainprotobufHDChain": {
      "type": "object",
      "properties": {
        "chain_addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufHDAddress"
          }
        },
        "index": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "blockchainprotobufHDWallet": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "chains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufHDChain"
          }
        },
        "hd": {
          "type": "boolean",
          "format": "boolean"
        },
        "extended_public_key": {
          "type": "string"
        },
        "subchain_indexes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "blockchainprotobufOAPTX": {
      "type": "object",
      "properties": {
        "ver": {
          "type": "integer",
          "format": "int32"
        },
        "assetid": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "confirmed": {
          "type": "string",
          "format": "date-time"
        },
        "received": {
          "type": "string",
          "format": "date-time"
        },
        "oap_meta": {
          "type": "string"
        },
        "double_spend": {
          "type": "boolean",
          "format": "boolean"
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "blockchainprotobufTX": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "fees": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "preference": {
          "type": "string"
        },
        "relayed_by": {
          "type": "string"
        },
        "received": {
          "type": "string",
          "format": "date-time"
        },
        "ver": {
          "type": "integer",
          "format": "int32"
        },
        "lock_time": {
          "type": "integer",
          "format": "int32"
        },
        "double_spend": {
          "type": "boolean",
          "format": "boolean"
        },
        "vin_sz": {
          "type": "integer",
          "format": "int32"
        },
        "vout_sz": {
          "type": "integer",
          "format": "int32"
        },
        "confirmations": {
          "type": "integer",
          "format": "int32"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufTXInput"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockchainprotobufTXOutput"
          }
        },
        "opt_in_rbf": {
          "type": "boolean",
          "format": "boolean"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "confirmed": {
          "type": "string",
          "format": "date-time"
        },
        "receive_count": {
          "type": "integer",
          "format": "int32"
        },
        "change_address": {
          "type": "string"
        },
        "block_hash": {
          "type": "string"
        },
        "block_index": {
          "type": "integer",
          "format": "int32"
        },
        "double_of": {
          "type": "string"
        },
        "data_protocol": {
          "type": "string"
        },
        "hex": {
          "type": "string"
        },
        "next_inputs": {
          "$ref": "#/definitions/protobufAny"
        },
        "next_outputs": {
          "$ref": "#/definitions/protobufAny"
        }
      }
    },
    "blockchainprotobufTXInput": {
      "type": "object",
      "properties": {
        "prev_hash": {
          "type": "string"
        },
        "output_index": {
          "type": "integer",
          "format": "int32"
        },
        "output_value": {
          "type": "integer",
          "format": "int32"
        },
        "script_type": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "wallet_name": {
          "type": "string"
        },
        "wallet_token": {
          "type": "string"
        }
      }
    },
    "blockchainprotobufTXOutput": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "script": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "script_type": {
          "type": "string"
        },
        "spent_by": {
          "type": "string"
        },
        "data_hex": {
          "type": "string"
        },
        "data_string": {
          "type": "string"
        }
      }
    },
    "blockchainprotobufTXRef": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "block_height": {
          "type": "integer",
          "format": "int32"
        },
        "tx_hash": {
          "type": "string"
        },
        "tx_input_n": {
          "type": "integer",
          "format": "int32"
        },
        "tx_output_n": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "preference": {
          "type": "string"
        },
        "spent": {
          "type": "boolean",
          "format": "boolean"
        },
        "double_spend": {
          "type": "boolean",
          "format": "boolean"
        },
        "confirmations": {
          "type": "integer",
          "format": "int32"
        },
        "script": {
          "type": "string"
        },
        "ref_balance": {
          "type": "integer",
          "format": "int32"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "confirmed": {
          "type": "string",
          "format": "date-time"
        },
        "spent_by": {
          "type": "string"
        },
        "received": {
          "type": "string",
          "format": "date-time"
        },
        "receive_count": {
          "type": "integer",
          "format": "int32"
        },
        "double_of": {
          "type": "string"
        }
      }
    },
    "blockchainprotobufWallet": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    }
  }
}
