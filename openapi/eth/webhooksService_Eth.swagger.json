{
  "swagger": "2.0",
  "info": {
    "title": "webhooksService_Eth.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/eth/{network}/hooks": {
      "get": {
        "operationId": "ListWebHooksEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethEvents"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WebHooksService"
        ]
      },
      "post": {
        "operationId": "CreateWebHookEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethEvent"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethCreateWebHookEndpointRequest"
            }
          }
        ],
        "tags": [
          "WebHooksService"
        ]
      }
    },
    "/eth/{network}/hooks/{webhookid}": {
      "get": {
        "operationId": "WebHookIDEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethEvent"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          },
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WebHooksService"
        ]
      },
      "delete": {
        "operationId": "DeleteWebHookEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethNullValue"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          },
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WebHooksService"
        ]
      }
    }
  },
  "definitions": {
    "ethCreateWebHookEndpointRequest": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/ethNetworkAllowingAlias"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the event; generated when a new request is created."
        },
        "event": {
          "type": "string",
          "description": "Type of event; can be unconfirmed-tx, new-block, confirmed-tx, tx-confirmation, double-spend-tx."
        },
        "hash": {
          "type": "string",
          "description": "optional Only objects with a matching hash will be sent. The hash can either be for a block or a transaction."
        },
        "address": {
          "type": "string",
          "description": "optional Only transactions associated with the given address will be sent."
        },
        "confirmations": {
          "type": "integer",
          "format": "int32",
          "description": "optional Used in concert with the tx-confirmation event type to set the number of confirmations desired for which to receive an update. You’ll receive an updated TX for every confirmation up to this amount. The maximum allowed is 10; if not set, it will default to 6."
        },
        "url": {
          "type": "string",
          "description": "optional Callback URL for this Event’s WebHook; not applicable for WebSockets usage."
        },
        "callback_errors": {
          "type": "integer",
          "format": "int32",
          "description": "Number of errors when attempting to POST to callback URL; not applicable for WebSockets usage."
        }
      }
    },
    "ethEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the event; generated when a new request is created."
        },
        "event": {
          "type": "string",
          "description": "Type of event; can be unconfirmed-tx, new-block, confirmed-tx, tx-confirmation, double-spend-tx."
        },
        "hash": {
          "type": "string",
          "description": "optional Only objects with a matching hash will be sent. The hash can either be for a block or a transaction."
        },
        "address": {
          "type": "string",
          "description": "optional Only transactions associated with the given address will be sent."
        },
        "confirmations": {
          "type": "string",
          "format": "uint64",
          "description": "optional Used in concert with the tx-confirmation event type to set the number of confirmations desired for which to receive an update. You’ll receive an updated TX for every confirmation up to this amount. The maximum allowed is 10; if not set, it will default to 6."
        },
        "url": {
          "type": "string",
          "description": "optional Callback URL for this Event’s WebHook; not applicable for WebSockets usage."
        },
        "callback_errors": {
          "type": "string",
          "format": "uint64",
          "description": "Number of errors when attempting to POST to callback URL; not applicable for WebSockets usage."
        }
      }
    },
    "ethEvents": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ethEvent"
          }
        }
      }
    },
    "ethNetworkAllowingAlias": {
      "type": "string",
      "enum": [
        "MAIN",
        "main",
        "ROPSTEN",
        "ropsten"
      ],
      "default": "MAIN"
    },
    "ethNullValue": {
      "type": "object"
    }
  }
}
