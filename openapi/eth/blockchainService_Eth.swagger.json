{
  "swagger": "2.0",
  "info": {
    "title": "blockchainService_Eth.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/eth/{network}": {
      "get": {
        "operationId": "GetChainEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethBlockchain"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    },
    "/eth/{network}/blocks/{block_hash}": {
      "get": {
        "operationId": "GetBlockHashEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethBlock"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          },
          {
            "name": "block_hash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "txstart",
            "description": "Filters response to only include transaction hashes after txstart in the block.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Filters response to only include a maximum of limit transactions hashes in the block. Maximum value allowed is 500.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    },
    "/eth/{network}/blocks/{block_height}": {
      "get": {
        "operationId": "GetBlockHeightEndpoint",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ethBlock"
            }
          }
        },
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "MAIN",
              "main",
              "ROPSTEN",
              "ropsten"
            ]
          },
          {
            "name": "block_height",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "txstart",
            "description": "Filters response to only include transaction hashes after txstart in the block.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Filters response to only include a maximum of limit transactions hashes in the block. Maximum value allowed is 500.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    }
  },
  "definitions": {
    "ethBlock": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "title": "The hash of the block; in Ethereum, the hashing function is Keccak/SHA3"
        },
        "height": {
          "type": "string",
          "format": "uint64",
          "description": "The height of the block in the blockchain; i.e., there are height earlier blocks in its blockchain."
        },
        "depth": {
          "type": "string",
          "format": "uint64",
          "description": "The depth of the block in the blockchain; i.e., there are depth later blocks in its blockchain."
        },
        "chain": {
          "type": "string",
          "title": "The name of the blockchain represented, in the form of $COIN.$CHAIN"
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "description": "The total number of wei transacted in this block."
        },
        "fees": {
          "type": "string",
          "format": "uint64",
          "description": "The total number of fees—in wei—collected by miners in this block."
        },
        "size": {
          "type": "string",
          "format": "uint64",
          "description": "Raw size of block (including header and all transactions) in bytes."
        },
        "ver": {
          "type": "string",
          "format": "uint64",
          "description": "Block version."
        },
        "time": {
          "type": "string",
          "description": "Recorded time at which block was built."
        },
        "received_time": {
          "type": "string",
          "description": "The time BlockCypher’s servers receive the block."
        },
        "coinbase_addr": {
          "type": "string",
          "description": "The Ethereum address of the miner that received the coinbase and fee reward."
        },
        "relayed_by": {
          "type": "string",
          "description": "Address of the peer that sent BlockCypher’s servers this block."
        },
        "nonce": {
          "type": "string",
          "format": "uint64",
          "description": "The number used by a miner to generate this block."
        },
        "n_tx": {
          "type": "string",
          "format": "uint64",
          "description": "Number of transactions in this block."
        },
        "prev_block": {
          "type": "string",
          "description": "The hash of the previous block in the blockchain."
        },
        "prev_block_url": {
          "type": "string",
          "description": "The BlockCypher URL to query for more information on the previous block."
        },
        "tx_url": {
          "type": "string",
          "description": "The base BlockCypher URL to receive transaction details. To get more details about specific transactions, you must concatenate this URL with the desired transaction hash(es)."
        },
        "mrkl_root": {
          "type": "string",
          "description": "The Merkle root of this block."
        },
        "txids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of transaction hashes in this block (initiated by externally controlled accounts). By default, only 20 are included."
        },
        "internal_txids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of internal transaction hashes (initiated by internal contracts) in this block. By default, only 20 are included."
        },
        "next_txids": {
          "type": "string",
          "description": "Optional If there are more transactions that couldn’t fit in the txids array, this is the BlockCypher URL to query the next set of transactions (within a Block object)."
        },
        "next_internal_txids": {
          "type": "string",
          "description": "Optional If there are more internal transactions that couldn’t fit in the internal_txids array, this is the BlockCypher URL to query the next set of transactions (within a Block object)."
        },
        "uncles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of uncle blocks by hash included by the miner of this block. You can read more about uncles here."
        }
      }
    },
    "ethBlockchain": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the blockchain represented, in the form of $COIN.$CHAIN."
        },
        "height": {
          "type": "string",
          "format": "uint64",
          "description": "The current height of the blockchain; i.e., the number of blocks in the blockchain."
        },
        "hash": {
          "type": "string",
          "description": "The hash of the latest confirmed block in the blockchain; in Ethereum, the hashing function is Keccak/SHA3."
        },
        "time": {
          "type": "string",
          "description": "The time of the latest update to the blockchain; typically when the latest block was added."
        },
        "latest_url": {
          "type": "string",
          "description": "The BlockCypher URL to query for more information on the latest confirmed block; returns a Block."
        },
        "previous_hash": {
          "type": "string",
          "description": "The hash of the second-to-latest confirmed block in the blockchain."
        },
        "previous_url": {
          "type": "string",
          "description": "The BlockCypher URL to query for more information on the second-to-latest confirmed block; returns a Block."
        },
        "unconfirmed_count": {
          "type": "string",
          "format": "uint64",
          "description": "Number of unconfirmed transactions in memory pool (likely to be included in next block)."
        },
        "high_gas_price": {
          "type": "string",
          "format": "uint64",
          "description": "A rolling average of the gas price (in wei) for transactions to be confirmed within 1 to 2 blocks."
        },
        "medium_gas_price": {
          "type": "string",
          "format": "uint64",
          "description": "A rolling average of the gas price (in wei) for transactions to be confirmed within 3 to 6 blocks."
        },
        "low_gas_price": {
          "type": "string",
          "format": "uint64",
          "description": "A rolling average of the gas price (in wei) for transactions to be confirmed in 7 or more blocks."
        },
        "last_fork_height": {
          "type": "string",
          "format": "uint64",
          "description": "Optional The current height of the latest fork to the blockchain; when no competing blockchain fork present, not returned with endpoints that return Blockchains."
        },
        "last_fork_hash": {
          "type": "string",
          "description": "Optional The hash of the latest confirmed block in the latest fork of the blockchain; when no competing blockchain fork present, not returned with endpoints that return Blockchains."
        }
      }
    },
    "ethNetworkAllowingAlias": {
      "type": "string",
      "enum": [
        "MAIN",
        "main",
        "ROPSTEN",
        "ropsten"
      ],
      "default": "MAIN"
    }
  }
}
