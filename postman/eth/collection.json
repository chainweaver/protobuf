{
  "item": [
    {
      "name": "eth",
      "item": [
        {
          "name": "{network}",
          "item": [
            {
              "name": "General information about the Ethereum blockchain is available by GET-ing the base resource.",
              "request": {
                "name": "General information about the Ethereum blockchain is available by GET-ing the base resource.",
                "description": {
                  "content": "The returned object contains a litany of information, including its height, the time/hash of the latest block, and more. For Ethereum, the object includes information on gas_price, denoted in wei. Unlike Bitcoin, fees are determined by the computational execution cost of the transaction via gas; in order to prevent runaway contract execution, each operation in Ethereum’s Virtual Machine requires a fixed/known amount of gas. While the amount of gas is fixed for a given EVM operation, the price of gas fluctuates based on market demand on the Ethereum blockchain (similar to Bitcoin fees). For more detail, check this very helpful Stack Exchange explanation.\n\nFor more detailed information about the data returned, check the Blockchain object.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "eth",
                    ":network"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": ""
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "network"
                    }
                  ]
                },
                "method": "GET",
                "auth": {
                  "type": "noauth"
                }
              },
              "response": [
                {
                  "originalRequest": {
                    "url": {
                      "path": [
                        "eth",
                        "<string>"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"<string>\",\n \"hash\": \"<string>\",\n \"time\": \"<string>\",\n \"latest_url\": \"<string>\",\n \"previous_hash\": \"<string>\",\n \"previous_url\": \"<string>\",\n \"last_fork_hash\": \"<string>\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": []
            },
            {
              "name": "addrs",
              "item": [
                {
                  "name": "Generate Address Endpoint",
                  "request": {
                    "name": "Generate Address Endpoint",
                    "description": {
                      "content": "The Generate Address endpoint allows you to generate private-public key-pairs along with an associated public address. No information is required with this POST request. <aside class=\"success\">The private key returned is immediately discarded by our servers, but we advise that these keys should not be used for any high-value—or long-term storage—addresses.</aside> <aside class=\"success\">The private key returned is immediately discarded by our servers, but we advise that these keys should not be used for any high-value—or long-term storage—addresses.</aside>The returned object contains a private key, a public key, and a public address, all hex-encoded.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "addrs"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "addrs"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"address\": \"<string>\",\n \"public\": \"<string>\",\n \"private\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "{address}",
                  "item": [
                    {
                      "name": "Address Endpoint",
                      "request": {
                        "name": "Address Endpoint",
                        "description": {
                          "content": "The Address Endpoint returns more information about an address’ transactions than the Address Balance Endpoint, but sacrifices some response speed in the process. ADDRESS is a string representing the public address (or wallet/HD wallet name) you’re interested in querying, for example: `738d145faabb1e00cf5a017588a9c0f998318012` The returned object contains information about the address, including its balance in wei, the number of transactions associated with it, and transaction summaries in descending order by block height.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "eth",
                            ":network",
                            "addrs",
                            ":address"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "description": "Filters response to only include transactions below before height in the blockchain.",
                              "key": "before",
                              "value": "<integer>"
                            },
                            {
                              "description": "Filters response to only include transactions above after height in the blockchain.",
                              "key": "after",
                              "value": "<integer>"
                            },
                            {
                              "description": "limit sets the minimum number of returned TXRefs; there can be less if there are less than limit TXRefs associated with this address, but there can be more in the rare case of more TXRefs in the block at the bottom of your call. This ensures paging by block height never misses TXRefs. Defaults to 200, maximum is 2000.",
                              "key": "limit",
                              "value": "<integer>"
                            },
                            {
                              "description": "If set, only returns the balance and TXRefs that have at least this number of confirmations.",
                              "key": "confirmations",
                              "value": "<integer>"
                            }
                          ],
                          "variable": [
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "network"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "address"
                            }
                          ]
                        },
                        "method": "GET",
                        "auth": {
                          "type": "noauth"
                        }
                      },
                      "response": [
                        {
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "addrs",
                                "<string>"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                },
                                {
                                  "key": "before",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "after",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "limit",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "confirmations",
                                  "value": "<integer>"
                                }
                              ],
                              "variable": []
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"address\": \"<string>\",\n \"tx_url\": \"<string>\",\n \"txrefs\": [\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  },\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  }\n ],\n \"unconfirmed_txrefs\": [\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  },\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  }\n ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": []
                    },
                    {
                      "name": "Address Balance Endpoint",
                      "request": {
                        "name": "Address Balance Endpoint",
                        "description": {
                          "content": "The Address Balance Endpoint is the simplest—and fastest—method to get a subset of information on a public address. ADDRESS is a string representing the public address you’re interested in querying, for example: `738d145faabb1e00cf5a017588a9c0f998318012` The returned object contains information about the address, including its balance in wei and the number of transactions associated with it. The endpoint omits any detailed transaction information, but if that isn’t required by your application, then it’s the fastest and preferred way to get public address information.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "eth",
                            ":network",
                            "addrs",
                            ":address",
                            "balance"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": [
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "network"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "address"
                            }
                          ]
                        },
                        "method": "GET",
                        "auth": {
                          "type": "noauth"
                        }
                      },
                      "response": [
                        {
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "addrs",
                                "<string>",
                                "balance"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                }
                              ],
                              "variable": []
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"address\": \"<string>\",\n \"total_received\": \"<string>\",\n \"total_sent\": \"<string>\",\n \"balance\": \"<string>\",\n \"unconfirmed_balance\": \"<string>\",\n \"final_balance\": \"<string>\",\n \"n_tx\": \"<string>\",\n \"unconfirmed_n_tx\": \"<string>\",\n \"final_n_tx\": \"<string>\",\n \"tx_url\": \"<string>\",\n \"txrefs\": [\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  },\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  }\n ],\n \"unconfirmed_txrefs\": [\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  },\n  {\n   \"block_height\": \"<integer>\",\n   \"tx_hash\": \"<string>\",\n   \"tx_input_n\": \"<string>\",\n   \"tx_output_n\": \"<string>\",\n   \"value\": \"<string>\",\n   \"double_spend\": \"<boolean>\",\n   \"confirmations\": \"<string>\",\n   \"ref_balance\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"double_of\": \"<string>\"\n  }\n ],\n \"hasMore\": \"<boolean>\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "name": "指定した条件に当てはまる ajiting がなかった場合に返すレスポンスです。",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "addrs",
                                "<string>",
                                "balance"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                }
                              ],
                              "variable": []
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "\"schema type not provided\"",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "name": "blocks",
              "item": [
                {
                  "name": "If you want more data on a particular block, you can use the Block Hash endpoint.",
                  "request": {
                    "name": "If you want more data on a particular block, you can use the Block Hash endpoint.",
                    "description": {
                      "content": "$BLOCK_HASH is a string representing the hash of the block you’re interested in querying, for example:\n\n0000000000000000189bba3564a63772107b5673c940c16f12662b3e8546b412\n\nThe returned object contains information about the block, including its height, the total amount of wei transacted within it, the number of transactions in it, transaction hashes listed in the canonical order in which they appear in the block, and more. For more detail on the data returned, check the Block object.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "blocks",
                        ":block_hash"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        },
                        {
                          "description": "Filters response to only include transaction hashes after txstart in the block.",
                          "key": "txstart",
                          "value": "<integer>"
                        },
                        {
                          "description": "Filters response to only include a maximum of limit transactions hashes in the block. Maximum value allowed is 500.",
                          "key": "limit",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        },
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "block_hash"
                        }
                      ]
                    },
                    "method": "GET",
                    "auth": {
                      "type": "noauth"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "blocks",
                            "<string>"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "key": "txstart",
                              "value": "<integer>"
                            },
                            {
                              "key": "limit",
                              "value": "<integer>"
                            }
                          ],
                          "variable": []
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"hash\": \"<string>\",\n \"chain\": \"<string>\",\n \"time\": \"<string>\",\n \"received_time\": \"<string>\",\n \"coinbase_addr\": \"<string>\",\n \"relayed_by\": \"<string>\",\n \"prev_block\": \"<string>\",\n \"prev_block_url\": \"<string>\",\n \"tx_url\": \"<string>\",\n \"mrkl_root\": \"<string>\",\n \"txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"internal_txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"next_txids\": \"<string>\",\n \"next_internal_txids\": \"<string>\",\n \"uncles\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "You can also query for information on a block using its height, using the same resource but with a different variable type.",
                  "request": {
                    "name": "You can also query for information on a block using its height, using the same resource but with a different variable type.",
                    "description": {
                      "content": "BLOCK_HEIGHT is an integer representing the height of the block you’re interested in querying, for example:\n\n1500000\n\nAs above, the returned object contains information about the block, including its hash, the total amount of wei transacted within it, the number of transactions in it, transaction hashes listed in the canonical order in which they appear in the block, and more. For more detail on the data returned, check the Block object.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "blocks",
                        ":block_height"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        },
                        {
                          "description": "Filters response to only include transaction hashes after txstart in the block.",
                          "key": "txstart",
                          "value": "<integer>"
                        },
                        {
                          "description": "Filters response to only include a maximum of limit transactions hashes in the block. Maximum value allowed is 500.",
                          "key": "limit",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        },
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "block_height"
                        }
                      ]
                    },
                    "method": "GET",
                    "auth": {
                      "type": "noauth"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "blocks",
                            "<string>"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "key": "txstart",
                              "value": "<integer>"
                            },
                            {
                              "key": "limit",
                              "value": "<integer>"
                            }
                          ],
                          "variable": []
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"hash\": \"<string>\",\n \"height\": \"<string>\",\n \"depth\": \"<string>\",\n \"chain\": \"<string>\",\n \"total\": \"<string>\",\n \"fees\": \"<string>\",\n \"size\": \"<string>\",\n \"ver\": \"<string>\",\n \"time\": \"<string>\",\n \"received_time\": \"<string>\",\n \"coinbase_addr\": \"<string>\",\n \"relayed_by\": \"<string>\",\n \"nonce\": \"<string>\",\n \"n_tx\": \"<string>\",\n \"prev_block\": \"<string>\",\n \"prev_block_url\": \"<string>\",\n \"tx_url\": \"<string>\",\n \"mrkl_root\": \"<string>\",\n \"txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"internal_txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"next_txids\": \"<string>\",\n \"next_internal_txids\": \"<string>\",\n \"uncles\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "name": "contracts",
              "item": [
                {
                  "name": "The Create Contract Endpoint allows you to submit your solidity code and params to check raw serialized binary compilation and ABI. It’s an easy to validate your contract compiles before pushing it to the Ethereum blockchain.",
                  "request": {
                    "name": "The Create Contract Endpoint allows you to submit your solidity code and params to check raw serialized binary compilation and ABI. It’s an easy to validate your contract compiles before pushing it to the Ethereum blockchain.",
                    "description": {
                      "content": "If you include a private key (associated with a funded Ethereum external account), gas_limit, and contract(s) to publish, BlockCypher will embed the contract into the blockchain and return the transaction hash that created the contract and the contract address. Find both of those properties under the returned contract object as address and creation_tx_hash.\n\nThe params property lets you provide arguments to the contract constructor. If your contract has no constructor or the constructor takes no arguments, this property can be omitted.\n\nYou can optionally include value in wei to transfer to the contract on creation.\n\nNote that for now both the contract solidity source and the ABI are made publicly available for anyone with the contract hash. We will support making the source private to your token in the future. However note that all contracts on the public Ethereum blockchain can be seen in binary form and it’s only a matter of time before good decompilers surface.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "contracts"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"solidity\": \"<string>\",\n    \"params\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"publish\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private\": \"<string>\",\n    \"gas_limit\": \"<integer>\",\n    \"value\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"bin\": \"<string>\",\n    \"abi\": \"<string>\",\n    \"address\": \"<string>\",\n    \"created\": \"<string>\",\n    \"creation_tx_hash\": \"<string>\",\n    \"results\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "contracts"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"solidity\": \"<string>\",\n    \"params\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"publish\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private\": \"<string>\",\n    \"gas_limit\": \"<integer>\",\n    \"value\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"bin\": \"<string>\",\n    \"abi\": \"<string>\",\n    \"address\": \"<string>\",\n    \"created\": \"<string>\",\n    \"creation_tx_hash\": \"<string>\",\n    \"results\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"contract\": [\n  {\n   \"solidity\": \"<string>\",\n   \"params\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"publish\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"private\": \"<string>\",\n   \"name\": \"<string>\",\n   \"bin\": \"<string>\",\n   \"abi\": \"<string>\",\n   \"address\": \"<string>\",\n   \"created\": \"<string>\",\n   \"creation_tx_hash\": \"<string>\",\n   \"results\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"solidity\": \"<string>\",\n   \"params\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"publish\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"private\": \"<string>\",\n   \"name\": \"<string>\",\n   \"bin\": \"<string>\",\n   \"abi\": \"<string>\",\n   \"address\": \"<string>\",\n   \"created\": \"<string>\",\n   \"creation_tx_hash\": \"<string>\",\n   \"results\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "{query address}",
                  "item": [
                    {
                      "name": "ADDRESS is a string representing the contract address you’re interested in querying, for example:",
                      "request": {
                        "name": "ADDRESS is a string representing the contract address you’re interested in querying, for example:",
                        "description": {
                          "content": "0eb688e79698d645df015cf2e9db5a6fe16357f1\n\nThe returned object contains information about the contract; if you deployed the contract with BlockCypher, it will return solidity and abi as well.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "eth",
                            ":network",
                            "contracts",
                            ":query_address"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "key": "token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "network"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "query_address"
                            }
                          ]
                        },
                        "method": "GET",
                        "auth": {
                          "type": "noauth"
                        }
                      },
                      "response": [
                        {
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "contracts",
                                "<string>"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                },
                                {
                                  "key": "token",
                                  "value": "<string>"
                                }
                              ],
                              "variable": []
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"solidity\": \"<string>\",\n \"params\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"publish\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"private\": \"<string>\",\n \"gas_limit\": \"<string>\",\n \"value\": \"<string>\",\n \"name\": \"<string>\",\n \"bin\": \"<string>\",\n \"abi\": \"<string>\",\n \"address\": \"<string>\",\n \"created\": \"<string>\",\n \"creation_tx_hash\": \"<string>\",\n \"results\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": []
                    },
                    {
                      "name": "The Call Contract Method endpoint makes every method in your contracts callable simply via an HTTP request. It’s a binding that translates a published contract into a set of endpoints (one for each method) and a provided JSON array into a set of arguments to invoke a given method.",
                      "request": {
                        "name": "The Call Contract Method endpoint makes every method in your contracts callable simply via an HTTP request. It’s a binding that translates a published contract into a set of endpoints (one for each method) and a provided JSON array into a set of arguments to invoke a given method.",
                        "description": {
                          "content": "To call a method on a given contract, you must include a private key associated with a funded external account and a specified gas_limit in your request object. params are optionally accepted if the contract method allows them. Make sure the JSON types your provide match your contract signature (string, number, etc.). You can optionally include value in wei to transfer to this contract method.\n\nThe Call Contract endpoint will check the contract ABI to determine whether the method has been declared “constant”. If so, no transaction will be created and no gas will be consumed. The method is just called locally on our servers and won’t be registered on the blockchain. Otherwise, we will build the call transaction to invoke the method on the Ethereum blockchain and propagate it on the network. Keep in mind that in that case, you will need to wait for the call transaction to be included in a block to see its effects.\nADDRESS is a string representing the contract address you’re interested in querying, for example:\n\n0eb688e79698d645df015cf2e9db5a6fe16357f1\n\nMETHOD is a string representing a declared method from the above contract; in the above example, the options are:\n\ngreet\n\nor\n\nkill",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "eth",
                            ":network",
                            "contracts",
                            ":query_address",
                            ":method"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": [
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "network"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "query_address"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "method"
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "noauth"
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"query_address\": \"<string>\",\n    \"method\": \"<string>\",\n    \"solidity\": \"<string>\",\n    \"params\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"publish\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private\": \"<string>\",\n    \"gas_limit\": \"<integer>\",\n    \"value\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"bin\": \"<string>\",\n    \"abi\": \"<string>\",\n    \"address\": \"<string>\",\n    \"created\": \"<string>\",\n    \"creation_tx_hash\": \"<string>\",\n    \"results\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "response": [
                        {
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "contracts",
                                "<string>",
                                "<string>"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                }
                              ],
                              "variable": []
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"network\": \"MAIN\",\n    \"query_address\": \"<string>\",\n    \"method\": \"<string>\",\n    \"solidity\": \"<string>\",\n    \"params\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"publish\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private\": \"<string>\",\n    \"gas_limit\": \"<integer>\",\n    \"value\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"bin\": \"<string>\",\n    \"abi\": \"<string>\",\n    \"address\": \"<string>\",\n    \"created\": \"<string>\",\n    \"creation_tx_hash\": \"<string>\",\n    \"results\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"solidity\": \"<string>\",\n \"params\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"publish\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"private\": \"<string>\",\n \"gas_limit\": \"<string>\",\n \"value\": \"<string>\",\n \"name\": \"<string>\",\n \"bin\": \"<string>\",\n \"abi\": \"<string>\",\n \"address\": \"<string>\",\n \"created\": \"<string>\",\n \"creation_tx_hash\": \"<string>\",\n \"results\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "name": "txs",
              "item": [
                {
                  "name": "The Unconfirmed Transactions Endpoint returns an array of the latest transactions that haven’t been included in any blocks.",
                  "request": {
                    "name": "The Unconfirmed Transactions Endpoint returns an array of the latest transactions that haven’t been included in any blocks.",
                    "description": {
                      "content": "The returned object is an array of transactions that haven’t been included in blocks, arranged in reverse chronological order (latest is first, then older transactions follow).",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "txs"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "method": "GET",
                    "auth": {
                      "type": "noauth"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "txs"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"result\": [\n  {\n   \"block_height\": \"<integer>\",\n   \"hash\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"relayed_by\": \"<string>\",\n   \"received\": \"<string>\",\n   \"inputs\": [\n    {\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    },\n    {\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    }\n   ],\n   \"outputs\": [\n    {\n     \"script\": \"<string>\",\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    },\n    {\n     \"script\": \"<string>\",\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    }\n   ],\n   \"internal_txids\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"parent_tx\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"block_hash\": \"<string>\",\n   \"double_of\": \"<string>\",\n   \"execution_error\": \"<string>\"\n  },\n  {\n   \"block_height\": \"<integer>\",\n   \"hash\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"relayed_by\": \"<string>\",\n   \"received\": \"<string>\",\n   \"inputs\": [\n    {\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    },\n    {\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    }\n   ],\n   \"outputs\": [\n    {\n     \"script\": \"<string>\",\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    },\n    {\n     \"script\": \"<string>\",\n     \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n     ]\n    }\n   ],\n   \"internal_txids\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"parent_tx\": \"<string>\",\n   \"confirmed\": \"<string>\",\n   \"block_hash\": \"<string>\",\n   \"double_of\": \"<string>\",\n   \"execution_error\": \"<string>\"\n  }\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "We also offer the ability to decode raw transactions without sending propagating them to the network; perhaps you want to double-check another client library or confirm that another service is sending proper transactions.",
                  "request": {
                    "name": "We also offer the ability to decode raw transactions without sending propagating them to the network; perhaps you want to double-check another client library or confirm that another service is sending proper transactions.",
                    "description": {
                      "content": "$TXHEX is a hex-encoded raw representation of your transaction, for example:\n\nf86b808504e3b2920082520894add42af7dd58b27e1e6ca5c4fdc01214b52d382f870bdccd84e7b000801ba0b86360f1c2d2b38421a80e71bf4cf54371bc9aa62f81c925484c6557b44b13f1a07b5690150c10a3947225fb612162c90ccfaefde99f7d363a8013e3eead0e55dd\n\nIf it succeeds, you’ll receive your decoded TX object.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "txs",
                        "decode"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"tx\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "txs",
                            "decode"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"tx\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"block_height\": \"<integer>\",\n \"hash\": \"<string>\",\n \"addresses\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"total\": \"<string>\",\n \"fees\": \"<string>\",\n \"size\": \"<string>\",\n \"gas_used\": \"<string>\",\n \"gas_price\": \"<string>\",\n \"relayed_by\": \"<string>\",\n \"received\": \"<string>\",\n \"ver\": \"<string>\",\n \"double_spend\": \"<boolean>\",\n \"vin_sz\": \"<string>\",\n \"vout_sz\": \"<string>\",\n \"confirmations\": \"<string>\",\n \"inputs\": [\n  {\n   \"sequence\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"sequence\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"outputs\": [\n  {\n   \"value\": \"<string>\",\n   \"script\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"value\": \"<string>\",\n   \"script\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"internal_txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"parent_tx\": \"<string>\",\n \"confirmed\": \"<string>\",\n \"gas_limit\": \"<string>\",\n \"contract_creation\": \"<boolean>\",\n \"receive_count\": \"<string>\",\n \"block_hash\": \"<string>\",\n \"block_index\": \"<string>\",\n \"double_of\": \"<string>\",\n \"execution_error\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "Using BlockCypher’s API, you can push transactions to Ethereum in one of two ways:",
                  "request": {
                    "name": "Using BlockCypher’s API, you can push transactions to Ethereum in one of two ways:",
                    "description": {
                      "content": "* Use another Ethereum library to create your transactions, then push them using our raw-transaction-endpoint\n\n* Use our two-endpoint process outlined below, wherein we generate a TXSkeleton based on your input address, output address, and value to transfer.\n\nIn either case, for security reasons, we never take possession of your private keys.\n\nNew Transaction Endpoint\n\nTo use BlockCypher’s two-endpoint transaction creation tool, first you need to provide the input address, output address, and value to transfer (in wei). Provide this in a partially-filled out TX request object.\n\nAs you can see from the code example, you only need to provide a single public address within the addresses array of both the input and output of your TX request object. You also need to fill in the value with the amount you’d like to transfer from one address to another. Note that we only accept a single input and output address per Ethereum’s transaction model, and tosign only returns a single element in its array; we use arrays for parity with our Bitcoin API.\n\nBy default, creating a transaction that sends to an external account sets the gas_limit to 21000. For contract account recepients, that limit is raised to 80000. If you’d like to set a custom limit, add gas_limit to your request object.\nAs a return object, you’ll receive a TXSkeleton containing a slightly-more complete TX alongside data you need to sign in the tosign array. You’ll need this object for the next steps of the transaction creation process.\n\n<aside class=\"notice\">\n  The TXSkeleton returned by this endpoint may contain some data that’s temporary or incomplete, like the hash, and the gas used fields. This is by design, as the final TX can only be computed once signed data has been added. Do not rely on these fields until they are returned and sent to the network via the Send Transaction Endpoint outlined below.\n  next, you sign the data returned in the tosign array locally\n  here we're using our signer tool (https://github.com/blockcypher/btcutils/tree/master/signer), but any ECDSA secp256k1 signing tool should work (Ethereum uses the same ECDSA curve as Bitcoin for transaction signatures)\n  $PRIVATEKEY here is a hex-encoded private key corresponding to the input from address add42af7dd58b27e1e6ca5c4fdc01214b52d382f\n</aside>\n\n./signer a83f5bea598e0d217a03a2646d6c49edb2e99daf4537b2c09b008df76b77acec $PRIVATEKEY\n3045022100bc04ce017622f9830f955dbd8fafb65c5a72306a674711e507200f5f198954c90220581bc05e2658c258a985d914a158f89f44144a2e082837955b218d12a43a6a38\nLocally Sign Your Transaction\nWith your TXSkeleton returned from the New Transaction Endpoint, you now need to use your private key to sign the data provided in the tosign array.\n\nDigital signing can be a difficult process, and is where the majority of issues arise when dealing with cryptocurrency transactions. Ethereum uses the same elliptic curve as Bitcoin (secp256k1), so any Bitcoin signing library that fits with your workflow should suffice. If you want to experiment with client-side signing, consider using our signer tool.\n\n One of the most common errors in the signing process is a data format mismatch. We always return and expect hex-encoded data, but oftentimes, standard signing libraries require byte arrays. Remember to convert your data, and always send hex-encoded signatures to BlockCypher.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "txs",
                        "new"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"block_height\": \"<integer>\",\n    \"hash\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"relayed_by\": \"<string>\",\n    \"received\": \"<string>\",\n    \"ver\": \"<integer>\",\n    \"vin_sz\": \"<integer>\",\n    \"vout_sz\": \"<integer>\",\n    \"confirmations\": \"<integer>\",\n    \"inputs\": [\n        {\n            \"sequence\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"sequence\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"outputs\": [\n        {\n            \"value\": \"<string>\",\n            \"script\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"value\": \"<string>\",\n            \"script\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"internal_txids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parent_tx\": \"<string>\",\n    \"confirmed\": \"<string>\",\n    \"gas_limit\": \"<integer>\",\n    \"receive_count\": \"<integer>\",\n    \"block_hash\": \"<string>\",\n    \"block_index\": \"<integer>\",\n    \"double_of\": \"<string>\",\n    \"execution_error\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "txs",
                            "new"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"block_height\": \"<integer>\",\n    \"hash\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"relayed_by\": \"<string>\",\n    \"received\": \"<string>\",\n    \"ver\": \"<integer>\",\n    \"vin_sz\": \"<integer>\",\n    \"vout_sz\": \"<integer>\",\n    \"confirmations\": \"<integer>\",\n    \"inputs\": [\n        {\n            \"sequence\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"sequence\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"outputs\": [\n        {\n            \"value\": \"<string>\",\n            \"script\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"value\": \"<string>\",\n            \"script\": \"<string>\",\n            \"addresses\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"internal_txids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parent_tx\": \"<string>\",\n    \"confirmed\": \"<string>\",\n    \"gas_limit\": \"<integer>\",\n    \"receive_count\": \"<integer>\",\n    \"block_hash\": \"<string>\",\n    \"block_index\": \"<integer>\",\n    \"double_of\": \"<string>\",\n    \"execution_error\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"tx\": {\n  \"block_height\": \"<integer>\",\n  \"hash\": \"<string>\",\n  \"addresses\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"total\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"size\": \"<string>\",\n  \"gas_used\": \"<string>\",\n  \"gas_price\": \"<string>\",\n  \"relayed_by\": \"<string>\",\n  \"received\": \"<string>\",\n  \"ver\": \"<string>\",\n  \"double_spend\": \"<boolean>\",\n  \"vin_sz\": \"<string>\",\n  \"vout_sz\": \"<string>\",\n  \"confirmations\": \"<string>\",\n  \"inputs\": [\n   {\n    \"sequence\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   },\n   {\n    \"sequence\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   }\n  ],\n  \"outputs\": [\n   {\n    \"value\": \"<string>\",\n    \"script\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   },\n   {\n    \"value\": \"<string>\",\n    \"script\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   }\n  ],\n  \"internal_txids\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"parent_tx\": \"<string>\",\n  \"confirmed\": \"<string>\",\n  \"gas_limit\": \"<string>\",\n  \"contract_creation\": \"<boolean>\",\n  \"receive_count\": \"<string>\",\n  \"block_hash\": \"<string>\",\n  \"block_index\": \"<string>\",\n  \"double_of\": \"<string>\",\n  \"execution_error\": \"<string>\"\n },\n \"tosign\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"signatures\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"errors\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "If you’d prefer to use your own transaction library instead of the recommended path of our two-endpoint transaction generation we’re still happy to help you propagate your raw transactions. Simply send your raw hex-encoded transaction to this endpoint and we’ll leverage our well-connected network to propagate your transaction faster than anywhere else.",
                  "request": {
                    "name": "If you’d prefer to use your own transaction library instead of the recommended path of our two-endpoint transaction generation we’re still happy to help you propagate your raw transactions. Simply send your raw hex-encoded transaction to this endpoint and we’ll leverage our well-connected network to propagate your transaction faster than anywhere else.",
                    "description": {
                      "content": "$TXHEX is a hex-encoded raw representation of your transaction, for example:\n\nf86b808504e3b2920082520894add42af7dd58b27e1e6ca5c4fdc01214b52d382f870bdccd84e7b000801ba0b86360f1c2d2b38421a80e71bf4cf54371bc9aa62f81c925484c6557b44b13f1a07b5690150c10a3947225fb612162c90ccfaefde99f7d363a8013e3eead0e55dd\n\nIf it succeeds, you’ll receive a decoded TX object and an HTTP Status Code 201. You can then use the hash to track its progress on the network.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "txs",
                        "push"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "PUT",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"tx\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "txs",
                            "push"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"tx\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"block_height\": \"<integer>\",\n \"hash\": \"<string>\",\n \"addresses\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"total\": \"<string>\",\n \"fees\": \"<string>\",\n \"size\": \"<string>\",\n \"gas_used\": \"<string>\",\n \"gas_price\": \"<string>\",\n \"relayed_by\": \"<string>\",\n \"received\": \"<string>\",\n \"ver\": \"<string>\",\n \"double_spend\": \"<boolean>\",\n \"vin_sz\": \"<string>\",\n \"vout_sz\": \"<string>\",\n \"confirmations\": \"<string>\",\n \"inputs\": [\n  {\n   \"sequence\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"sequence\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"outputs\": [\n  {\n   \"value\": \"<string>\",\n   \"script\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"value\": \"<string>\",\n   \"script\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"internal_txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"parent_tx\": \"<string>\",\n \"confirmed\": \"<string>\",\n \"gas_limit\": \"<string>\",\n \"contract_creation\": \"<boolean>\",\n \"receive_count\": \"<string>\",\n \"block_hash\": \"<string>\",\n \"block_index\": \"<string>\",\n \"double_of\": \"<string>\",\n \"execution_error\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "Once you’ve finished signing the tosign data locally, put that (hex-encoded) data into the signatures array of the TXSkeleton. Unlike Bitcoin, you don’t need to include the signing accounts public key, as on Ethereum this is derived using the tosign data and signature data. But you must include the tosign data in addition to the signatures array for that derivation to work.",
                  "request": {
                    "name": "Once you’ve finished signing the tosign data locally, put that (hex-encoded) data into the signatures array of the TXSkeleton. Unlike Bitcoin, you don’t need to include the signing accounts public key, as on Ethereum this is derived using the tosign data and signature data. But you must include the tosign data in addition to the signatures array for that derivation to work.",
                    "description": {
                      "content": "If the transaction was successful, you’ll receive a TXSkeleton with the completed TX (which contains its final hash) and an HTTP Status Code 201.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "txs",
                        "send"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"tx\": {\n        \"block_height\": \"<integer>\",\n        \"hash\": \"<string>\",\n        \"addresses\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"total\": \"<string>\",\n        \"fees\": \"<string>\",\n        \"size\": \"<string>\",\n        \"gas_used\": \"<string>\",\n        \"gas_price\": \"<string>\",\n        \"relayed_by\": \"<string>\",\n        \"received\": \"<string>\",\n        \"ver\": \"<string>\",\n        \"double_spend\": \"<boolean>\",\n        \"vin_sz\": \"<string>\",\n        \"vout_sz\": \"<string>\",\n        \"confirmations\": \"<string>\",\n        \"inputs\": [\n            {\n                \"sequence\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            },\n            {\n                \"sequence\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        ],\n        \"outputs\": [\n            {\n                \"value\": \"<string>\",\n                \"script\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            },\n            {\n                \"value\": \"<string>\",\n                \"script\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        ],\n        \"internal_txids\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"parent_tx\": \"<string>\",\n        \"confirmed\": \"<string>\",\n        \"gas_limit\": \"<string>\",\n        \"contract_creation\": \"<boolean>\",\n        \"receive_count\": \"<string>\",\n        \"block_hash\": \"<string>\",\n        \"block_index\": \"<string>\",\n        \"double_of\": \"<string>\",\n        \"execution_error\": \"<string>\"\n    },\n    \"tosign\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"signatures\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"errors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "txs",
                            "send"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"tx\": {\n        \"block_height\": \"<integer>\",\n        \"hash\": \"<string>\",\n        \"addresses\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"total\": \"<string>\",\n        \"fees\": \"<string>\",\n        \"size\": \"<string>\",\n        \"gas_used\": \"<string>\",\n        \"gas_price\": \"<string>\",\n        \"relayed_by\": \"<string>\",\n        \"received\": \"<string>\",\n        \"ver\": \"<string>\",\n        \"double_spend\": \"<boolean>\",\n        \"vin_sz\": \"<string>\",\n        \"vout_sz\": \"<string>\",\n        \"confirmations\": \"<string>\",\n        \"inputs\": [\n            {\n                \"sequence\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            },\n            {\n                \"sequence\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        ],\n        \"outputs\": [\n            {\n                \"value\": \"<string>\",\n                \"script\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            },\n            {\n                \"value\": \"<string>\",\n                \"script\": \"<string>\",\n                \"addresses\": [\n                    \"<string>\",\n                    \"<string>\"\n                ]\n            }\n        ],\n        \"internal_txids\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"parent_tx\": \"<string>\",\n        \"confirmed\": \"<string>\",\n        \"gas_limit\": \"<string>\",\n        \"contract_creation\": \"<boolean>\",\n        \"receive_count\": \"<string>\",\n        \"block_hash\": \"<string>\",\n        \"block_index\": \"<string>\",\n        \"double_of\": \"<string>\",\n        \"execution_error\": \"<string>\"\n    },\n    \"tosign\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"signatures\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"errors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"tx\": {\n  \"block_height\": \"<integer>\",\n  \"hash\": \"<string>\",\n  \"addresses\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"total\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"size\": \"<string>\",\n  \"gas_used\": \"<string>\",\n  \"gas_price\": \"<string>\",\n  \"relayed_by\": \"<string>\",\n  \"received\": \"<string>\",\n  \"ver\": \"<string>\",\n  \"double_spend\": \"<boolean>\",\n  \"vin_sz\": \"<string>\",\n  \"vout_sz\": \"<string>\",\n  \"confirmations\": \"<string>\",\n  \"inputs\": [\n   {\n    \"sequence\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   },\n   {\n    \"sequence\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   }\n  ],\n  \"outputs\": [\n   {\n    \"value\": \"<string>\",\n    \"script\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   },\n   {\n    \"value\": \"<string>\",\n    \"script\": \"<string>\",\n    \"addresses\": [\n     \"<string>\",\n     \"<string>\"\n    ]\n   }\n  ],\n  \"internal_txids\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"parent_tx\": \"<string>\",\n  \"confirmed\": \"<string>\",\n  \"gas_limit\": \"<string>\",\n  \"contract_creation\": \"<boolean>\",\n  \"receive_count\": \"<string>\",\n  \"block_hash\": \"<string>\",\n  \"block_index\": \"<string>\",\n  \"double_of\": \"<string>\",\n  \"execution_error\": \"<string>\"\n },\n \"tosign\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"signatures\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"errors\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "The Transaction Hash Endpoint returns detailed information about a given transaction based on its hash.",
                  "request": {
                    "name": "The Transaction Hash Endpoint returns detailed information about a given transaction based on its hash.",
                    "description": {
                      "content": "TXHASH is a string representing the hex-encoded transaction hash you’re interested in querying, for example:\n\n8f39fb4940c084460da00a876a521ef2ba84ad6ea8d2f5628c9f1f8aeb395342\n\nThe returned object contains detailed information about the transaction, including the value transfered, fees collected, date received, any scripts associated with an output, and more.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "txs",
                        ":txhash"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        },
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "txhash"
                        }
                      ]
                    },
                    "method": "GET",
                    "auth": {
                      "type": "noauth"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "txs",
                            "<string>"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"block_height\": \"<integer>\",\n \"hash\": \"<string>\",\n \"addresses\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"total\": \"<string>\",\n \"fees\": \"<string>\",\n \"size\": \"<string>\",\n \"gas_used\": \"<string>\",\n \"gas_price\": \"<string>\",\n \"relayed_by\": \"<string>\",\n \"received\": \"<string>\",\n \"ver\": \"<string>\",\n \"double_spend\": \"<boolean>\",\n \"vin_sz\": \"<string>\",\n \"vout_sz\": \"<string>\",\n \"confirmations\": \"<string>\",\n \"inputs\": [\n  {\n   \"sequence\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"sequence\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"outputs\": [\n  {\n   \"value\": \"<string>\",\n   \"script\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"value\": \"<string>\",\n   \"script\": \"<string>\",\n   \"addresses\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"internal_txids\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"parent_tx\": \"<string>\",\n \"confirmed\": \"<string>\",\n \"gas_limit\": \"<string>\",\n \"contract_creation\": \"<boolean>\",\n \"receive_count\": \"<string>\",\n \"block_hash\": \"<string>\",\n \"block_index\": \"<string>\",\n \"double_of\": \"<string>\",\n \"execution_error\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "name": "hooks",
              "item": [
                {
                  "name": "This resource lists your currently active events, according to the base resource and $YOURTOKEN.",
                  "request": {
                    "name": "This resource lists your currently active events, according to the base resource and $YOURTOKEN.",
                    "description": {},
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "hooks"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        },
                        {
                          "key": "token",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "method": "GET",
                    "auth": {
                      "type": "noauth"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "hooks"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "key": "token",
                              "value": "<string>"
                            }
                          ],
                          "variable": []
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"event\": [\n  {\n   \"id\": \"<string>\",\n   \"event\": \"<string>\",\n   \"hash\": \"<string>\",\n   \"address\": \"<string>\",\n   \"url\": \"<string>\",\n   \"filter\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"event\": \"<string>\",\n   \"hash\": \"<string>\",\n   \"address\": \"<string>\",\n   \"url\": \"<string>\",\n   \"filter\": \"<string>\"\n  }\n ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "Using a partially filled out Event, you can create a WebHook using this resource. Check the Event object description and types of events to understand the available options.",
                  "request": {
                    "name": "Using a partially filled out Event, you can create a WebHook using this resource. Check the Event object description and types of events to understand the available options.",
                    "description": {
                      "content": "If successful, it will return the Event with a newly generated id.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "eth",
                        ":network",
                        "hooks"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "network"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "noauth"
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"network\": \"MAIN\",\n    \"id\": \"<string>\",\n    \"event\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"address\": \"<string>\",\n    \"confirmations\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"callback_errors\": \"<integer>\",\n    \"token\": \"<string>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "originalRequest": {
                        "url": {
                          "path": [
                            "eth",
                            "<string>",
                            "hooks"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"network\": \"MAIN\",\n    \"id\": \"<string>\",\n    \"event\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"address\": \"<string>\",\n    \"confirmations\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"callback_errors\": \"<integer>\",\n    \"token\": \"<string>\"\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<string>\",\n \"event\": \"<string>\",\n \"hash\": \"<string>\",\n \"address\": \"<string>\",\n \"confirmations\": \"<string>\",\n \"url\": \"<string>\",\n \"callback_errors\": \"<string>\",\n \"filter\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": []
                },
                {
                  "name": "{webhookid}",
                  "item": [
                    {
                      "name": "This resource returns an Event based on its generated id.",
                      "request": {
                        "name": "This resource returns an Event based on its generated id.",
                        "description": {
                          "content": "WEBHOOKID is a string representing the event’s generated id, for example:\n\nce83d08f-7b86-4a6a-9b41-85507648f9c7",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "eth",
                            ":network",
                            "hooks",
                            ":webhookid"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "key": "token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "network"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "webhookid"
                            }
                          ]
                        },
                        "method": "GET",
                        "auth": {
                          "type": "noauth"
                        }
                      },
                      "response": [
                        {
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "hooks",
                                "<string>"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                },
                                {
                                  "key": "token",
                                  "value": "<string>"
                                }
                              ],
                              "variable": []
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<string>\",\n \"event\": \"<string>\",\n \"hash\": \"<string>\",\n \"address\": \"<string>\",\n \"confirmations\": \"<string>\",\n \"url\": \"<string>\",\n \"callback_errors\": \"<string>\",\n \"filter\": \"<string>\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": []
                    },
                    {
                      "name": "This resource deletes an active Event based on its id. Remember to include your token, or the request will fail.\nWEBHOOKID is a string representing the event’s generated id, for example:",
                      "request": {
                        "name": "This resource deletes an active Event based on its id. Remember to include your token, or the request will fail.\nWEBHOOKID is a string representing the event’s generated id, for example:",
                        "description": {
                          "content": "ce83d08f-7b86-4a6a-9b41-85507648f9c7\n\nIf successful, it won’t return any objects, but will respond with an HTTP Status Code 204.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "eth",
                            ":network",
                            "hooks",
                            ":webhookid"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "token",
                              "value": ""
                            },
                            {
                              "key": "token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "network"
                            },
                            {
                              "description": {
                                "content": "",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<string>",
                              "key": "webhookid"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "auth": {
                          "type": "noauth"
                        }
                      },
                      "response": [
                        {
                          "originalRequest": {
                            "url": {
                              "path": [
                                "eth",
                                "<string>",
                                "hooks",
                                "<string>"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "token",
                                  "value": ""
                                },
                                {
                                  "key": "token",
                                  "value": "<string>"
                                }
                              ],
                              "variable": []
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "\"<object>\"",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": []
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://api.chainweaver.io/"
    }
  ],
  "info": {
    "_postman_id": "",
    "name": "Chainweaver API for Ethereum",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Welcome to Chainweaver's API documentation!\\n All API calls are versioned and the current BlockCypher API is v1. The BlockCypher Ethereum API is currently in beta, and we hope not to introduce any breaking changes, but until it’s out of beta we can’t make that guarantee until it’s stable.",
      "type": "text/plain"
    }
  }
}
