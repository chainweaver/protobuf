/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var commonMessage_Eth_pb = require('./commonMessage_Eth_pb.js');
goog.exportSymbol('proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest', null, global);
goog.exportSymbol('proto.fairwaycorp.blockchainprotobuf.eth.Contracts', null, global);
goog.exportSymbol('proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest', null, global);
goog.exportSymbol('proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.repeatedFields_, null);
};
goog.inherits(proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.displayName = 'proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.repeatedFields_ = [3,4,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: jspb.Message.getFieldWithDefault(msg, 1, 0),
    solidity: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paramsList: jspb.Message.getRepeatedField(msg, 3),
    publishList: jspb.Message.getRepeatedField(msg, 4),
    pb_private: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gasLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    value: jspb.Message.getFieldWithDefault(msg, 7, 0),
    name: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bin: jspb.Message.getFieldWithDefault(msg, 9, ""),
    abi: jspb.Message.getFieldWithDefault(msg, 10, ""),
    address: jspb.Message.getFieldWithDefault(msg, 11, ""),
    created: jspb.Message.getFieldWithDefault(msg, 12, ""),
    creationTxHash: jspb.Message.getFieldWithDefault(msg, 13, ""),
    resultsList: jspb.Message.getRepeatedField(msg, 14)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest;
  return proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} */ (reader.readEnum());
      msg.setNetwork(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSolidity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addParams(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPublish(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGasLimit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBin(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbi(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreationTxHash(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSolidity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPublishList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getPrivate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGasLimit();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBin();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAbi();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCreationTxHash();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
};


/**
 * optional NetworkAllowingAlias network = 1;
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getNetwork = function() {
  return /** @type {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setNetwork = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string solidity = 2;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getSolidity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setSolidity = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string params = 3;
 * @return {!Array<string>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getParamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setParamsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.addParams = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.clearParamsList = function() {
  this.setParamsList([]);
};


/**
 * repeated string publish = 4;
 * @return {!Array<string>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getPublishList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setPublishList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.addPublish = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.clearPublishList = function() {
  this.setPublishList([]);
};


/**
 * optional string private = 5;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getPrivate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setPrivate = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 gas_limit = 6;
 * @return {number}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getGasLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setGasLimit = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 value = 7;
 * @return {number}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string name = 8;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string bin = 9;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getBin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setBin = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string abi = 10;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getAbi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setAbi = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string address = 11;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string created = 12;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setCreated = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string creation_tx_hash = 13;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getCreationTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setCreationTxHash = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * repeated string results = 14;
 * @return {!Array<string>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.getResultsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<string>} value */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.setResultsList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.addResults = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.CreateContractEndpointRequest.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.displayName = 'proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queryAddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest}
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest;
  return proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest}
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} */ (reader.readEnum());
      msg.setNetwork(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getQueryAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional NetworkAllowingAlias network = 1;
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias}
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.prototype.getNetwork = function() {
  return /** @type {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} value */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.prototype.setNetwork = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string query_address = 2;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.prototype.getQueryAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.GetContractAddressEndpointRequest.prototype.setQueryAddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.repeatedFields_, null);
};
goog.inherits(proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.displayName = 'proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.repeatedFields_ = [5,6,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queryAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    method: jspb.Message.getFieldWithDefault(msg, 3, ""),
    solidity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paramsList: jspb.Message.getRepeatedField(msg, 5),
    publishList: jspb.Message.getRepeatedField(msg, 6),
    pb_private: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gasLimit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    value: jspb.Message.getFieldWithDefault(msg, 9, 0),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bin: jspb.Message.getFieldWithDefault(msg, 11, ""),
    abi: jspb.Message.getFieldWithDefault(msg, 12, ""),
    address: jspb.Message.getFieldWithDefault(msg, 13, ""),
    created: jspb.Message.getFieldWithDefault(msg, 14, ""),
    creationTxHash: jspb.Message.getFieldWithDefault(msg, 15, ""),
    resultsList: jspb.Message.getRepeatedField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest;
  return proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} */ (reader.readEnum());
      msg.setNetwork(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSolidity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addParams(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addPublish(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGasLimit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBin(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbi(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreationTxHash(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getQueryAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSolidity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getPublishList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getPrivate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGasLimit();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAbi();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCreationTxHash();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
};


/**
 * optional NetworkAllowingAlias network = 1;
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getNetwork = function() {
  return /** @type {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.fairwaycorp.blockchainprotobuf.eth.NetworkAllowingAlias} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setNetwork = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string query_address = 2;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getQueryAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setQueryAddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string method = 3;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string solidity = 4;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getSolidity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setSolidity = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string params = 5;
 * @return {!Array<string>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getParamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setParamsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.addParams = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.clearParamsList = function() {
  this.setParamsList([]);
};


/**
 * repeated string publish = 6;
 * @return {!Array<string>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getPublishList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setPublishList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.addPublish = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.clearPublishList = function() {
  this.setPublishList([]);
};


/**
 * optional string private = 7;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getPrivate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setPrivate = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 gas_limit = 8;
 * @return {number}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getGasLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setGasLimit = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 value = 9;
 * @return {number}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string bin = 11;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getBin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setBin = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string abi = 12;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getAbi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setAbi = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string address = 13;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string created = 14;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setCreated = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string creation_tx_hash = 15;
 * @return {string}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getCreationTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setCreationTxHash = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * repeated string results = 16;
 * @return {!Array<string>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.getResultsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/** @param {!Array<string>} value */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.setResultsList = function(value) {
  jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.addResults = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.CallContractMethodEndpointRequest.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fairwaycorp.blockchainprotobuf.eth.Contracts.repeatedFields_, null);
};
goog.inherits(proto.fairwaycorp.blockchainprotobuf.eth.Contracts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fairwaycorp.blockchainprotobuf.eth.Contracts.displayName = 'proto.fairwaycorp.blockchainprotobuf.eth.Contracts';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.prototype.toObject = function(opt_includeInstance) {
  return proto.fairwaycorp.blockchainprotobuf.eth.Contracts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.Contracts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractList: jspb.Message.toObjectList(msg.getContractList(),
    commonMessage_Eth_pb.Contract.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.Contracts}
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fairwaycorp.blockchainprotobuf.eth.Contracts;
  return proto.fairwaycorp.blockchainprotobuf.eth.Contracts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.Contracts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.Contracts}
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new commonMessage_Eth_pb.Contract;
      reader.readMessage(value,commonMessage_Eth_pb.Contract.deserializeBinaryFromReader);
      msg.addContract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fairwaycorp.blockchainprotobuf.eth.Contracts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.Contracts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      commonMessage_Eth_pb.Contract.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Contract contract = 1;
 * @return {!Array<!proto.fairwaycorp.blockchainprotobuf.eth.Contract>}
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.prototype.getContractList = function() {
  return /** @type{!Array<!proto.fairwaycorp.blockchainprotobuf.eth.Contract>} */ (
    jspb.Message.getRepeatedWrapperField(this, commonMessage_Eth_pb.Contract, 1));
};


/** @param {!Array<!proto.fairwaycorp.blockchainprotobuf.eth.Contract>} value */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.prototype.setContractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fairwaycorp.blockchainprotobuf.eth.Contract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fairwaycorp.blockchainprotobuf.eth.Contract}
 */
proto.fairwaycorp.blockchainprotobuf.eth.Contracts.prototype.addContract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fairwaycorp.blockchainprotobuf.eth.Contract, opt_index);
};


proto.fairwaycorp.blockchainprotobuf.eth.Contracts.prototype.clearContractList = function() {
  this.setContractList([]);
};


goog.object.extend(exports, proto.fairwaycorp.blockchainprotobuf.eth);
