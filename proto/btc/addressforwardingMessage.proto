syntax = "proto3";

package fairwaycorp.blockchainprotobuf.btc;
option go_package = "github.com/fairway-corp/blockchain-protobuf/protoc-gen-go/btc";

import "commonMessage.proto";

message CreateForwardEndpointRequest {
  NetworkAllowingAlias network = 1;
  //Identifier of the address forwarding request; generated when a new request is created.
  string id = 2;
  //The mandatory user token.
  string token = 3;
  //The required destination address for address forwarding.
  string destination = 4;
  //The address which will automatically forward to destination; generated when a new request is created.
  string input_address = 5;
  //Optional Address to forward processing fees, if specified. Allows you to receive a fee for your own services.
  string process_fees_address = 6;
  //Optional Fixed processing fee amount to be sent to the fee address. A fixed satoshi amount or a percentage is required if a process_fees_address has been specified.
  int32 process_fees_satoshis = 7;
  //Optional Percentage of the transaction to be sent to the fee address. A fixed satoshi amount or a percentage is required if a process_fees_address has been specified.
  float process_fees_percent = 8;
  //Optional The URL to call anytime a new is forwarded.
  string callback_url = 9;
  //Optional Whether to also call the callback_url with subsequent confirmations of the forwarding transactions. Automatically sets up a WebHook.
  bool enable_confirmations = 10;
  //Optional Mining fee amount to include in the forwarding transaction, in satoshis. If not set, defaults to 10,000.
  int32 mining_fees_satoshis = 11;
  //Optional History of forwarding transaction hashes for this address forward; not present if this request has yet to forward any transactions.
  repeated string txs = 12;
}

message ListForwardsEndpointRequest {
  NetworkAllowingAlias network = 1;
  //Returns list of address forwards starting at the start index; useful for paging beyond the limit of 200 address forwards.
  int32 start = 2;
}


message AddressForwards {
  repeated AddressForward forwards = 1;
}

message DeleteForwardEndpointRequest {
  NetworkAllowingAlias network = 1;
  string payid = 2;
}

message DeleteForwardEndpointResponse {}
