syntax = "proto3";

package chainweaver.protobuf.eth;
option go_package = "github.com/chainweaver/protobuf/protoc-gen-go/eth";

import "commonMessage.proto";

message CreateContractEndpointRequest {
  NetworkAllowingAlias network = 1;
  // Solidity code of this contract; required when creating a contract. In responses, only returned with contracts initially compiled by BlockCypher.
  string solidity = 2;
  // Parameters for either contract creation or method execution.
  repeated string params = 3;
  // Named contract(s) to publish; necessary to specify when first creating a contract.
  repeated	string publish = 4;
  // Private key associated with a funded Ethereum external account used to publish a contract or execute a method.
  string private = 5;
  // Maximum amount of gas to use in contract creation or method execution.
  int32 gas_limit = 6;
  // Amount (in wei) to transfer; can be used when creating a contract or calling a method.
  int32 value = 7;
  // Name of contract as published.
  string name = 8;
  // Hex-encoded binary compilation of this contract.
  string bin = 9;
  // JSON-encoded ABI. Only returned with contracts initially compiled by BlockCypher.
  string abi = 10;
  // Hex-encoded address of this contract.
  string address = 11;
  // Timestamp when this contract was confirmed in the Ethereum blockchain.
  string created = 12;
  // Hex-encoded transaction hash that created this contract.
  string creation_tx_hash = 13;
  // If this is a response from a calling a contract method, this array of results may appear if the method returns any.
  repeated string results = 14;
  // Token
  string token = 15;
}

message ContractAddressEndpointRequest {
  NetworkAllowingAlias network = 1;
  string query_address = 2;
  string token = 3;
}

message CallContractMethodEndpointRequest {
  NetworkAllowingAlias network = 1;
  string query_address = 2;
  string method = 3;
  // Solidity code of this contract; required when creating a contract. In responses, only returned with contracts initially compiled by BlockCypher.
  string solidity = 4;
  // Parameters for either contract creation or method execution.
  repeated string params = 5;
  // Named contract(s) to publish; necessary to specify when first creating a contract.
  repeated	string publish = 6;
  // Private key associated with a funded Ethereum external account used to publish a contract or execute a method.
  string private = 7;
  // Maximum amount of gas to use in contract creation or method execution.
  int32 gas_limit = 8;
  // Amount (in wei) to transfer; can be used when creating a contract or calling a method.
  int32 value = 9;
  // Name of contract as published.
  string name = 10;
  // Hex-encoded binary compilation of this contract.
  string bin = 11;
  // JSON-encoded ABI. Only returned with contracts initially compiled by BlockCypher.
  string abi = 12;
  // Hex-encoded address of this contract.
  string address = 13;
  // Timestamp when this contract was confirmed in the Ethereum blockchain.
  string created = 14;
  // Hex-encoded transaction hash that created this contract.
  string creation_tx_hash = 15;
  // If this is a response from a calling a contract method, this array of results may appear if the method returns any.
  repeated string results = 16;
  // Token
  string token = 17;
}

message Contracts {
  repeated Contract contract = 1;
}
