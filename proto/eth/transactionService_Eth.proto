syntax = "proto3";

package fairwaycorp.blockchainprotobuf.eth;
option go_package = "github.com/fairway-corp/blockchain-protobuf/protoc-gen-go/eth";

import "google/api/annotations.proto";
import "transactionMessage_Eth.proto";
import "commonMessage_Eth.proto";

service TransactionService {
  rpc TransactionHashEndpoint (TransactionHashEndpointRequest) returns (TX) {
    option (google.api.http) = {
      get: "/eth/{network}/txs/{txhash}"
    };
  }
  rpc UnconfirmedTransactionsEndpoint (UnconfirmedTransactionsEndpointRequest) returns (TxArray) {
    option (google.api.http) = {
      get: "/eth/{network}/txs"
    };
  }
  rpc CreateTransactionsEndpoint (CreateTransactionsEndpointRequest) returns (TXSkeleton) {
    option (google.api.http) = {
      post: "/eth/{network}/txs/new"
      body: "*"
    };
  }
  rpc SendTransactionEndpoint (SendTransactionEndpointRequest) returns (TXSkeleton) {
    option (google.api.http) = {
      post: "/eth/{network}/txs/send"
      body: "*"
    };
  }
  rpc DecodeRawTransactionEndpoint (DecodeRawTransactionEndpointRequest) returns (TX) {
    option (google.api.http) = {
      post: "/eth/{network}/txs/decode"
      body: "*"
    };
  }
  rpc PushRawTransactionEndpoint (PushRawTransactionEndpointRequest) returns (TX) {
    option (google.api.http) = {
      put: "/eth/{network}/txs/push"
      body: "*"
    };
  }
}
